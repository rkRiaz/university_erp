{"version":3,"sources":["components/sidebar/MenuSidebar.js","components/TopBar.js","store/actions/types.js","components/Headline.js","components/loader/loader.js","components/loader/FullSreenLoader.js","components/Table.js","components/ReportTable2.js","components/Dashboard.js","components/login/Login.js","components/student/StudentAdd/StudentAdd.js","components/student/StudentEdit/StudentEdit.js","components/student/Students/MegaTable.js","components/student/Students/Students.js","components/teacher/TeacherAdd/TeacherAdd.js","components/teacher/TeacherDetails/TeacherDetails.js","components/teacher/TeacherEdit/TeacherEdit.js","components/teacher/Teachers/MegaTable.js","components/teacher/Teachers/Teachers.js","components/course/CourseAdd/CourseAdd.js","components/course/CourseEdit/CourseEdit.js","components/course/Courses/MegaTable.js","components/course/Courses/Courses.js","components/attendance/AttendanceAdd/AttendanceAdd.js","components/attendance/AttendanceEdit/AttendanceEdit.js","components/attendance/Attendances/MegaTable.js","components/attendance/Attendances/Attendances.js","App.js","serviceWorker.js","store/reducers/teacher.js","store/reducers/rootReducer.js","store/store.js","store/localStorage.js","index.js"],"names":["SideBar","teacherInfo","useSelector","state","teacher","useState","dashboardDrawer","teacherDrawer","courseDrawer","attendanceDrawer","studentDrawer","paymentDrawer","open","setOpen","history","useHistory","useEffect","location","pathname","openDrawer","type","e","preventDefault","push","window","innerWidth","className","to","PermIdentity","onClick","HomeOutlined","SupervisorAccountOutlined","ExpandLessOutlined","ExpandMoreOutlined","activeClassName","_id","AttachMoneyOutlined","QuestionAnswerOutlined","PhoneIphoneOutlined","EmailOutlined","TopBar","dispatch","useDispatch","LocalHospitalOutlined","MenuOutlined","FullscreenOutlined","SearchOutlined","NotificationsOutlined","PersonOutlineOutlined","ExitToApp","payload","Headline","headline","title","Loader","color","height","width","FullScreenLoader","StyledTableCell","withStyles","head","backgroundColor","fontWeight","body","fontSize","TableCell","StyledTableRow","theme","root","palette","action","hover","TableRow","useStyles","makeStyles","table","minWidth","CustomizedTables","students","attendances","classes","TableContainer","Table","TableHead","map","attendance","index","key","date","TableBody","length","sort","a","b","student_id","student","name","present","includes","Chip","size","label","style","background","absent","late","ReportTable2","presents","absents","lates","console","log","Math","ceil","Dashboard","React","memo","setAttendances","setStudents","courses","setCourses","useToasts","addToast","setPresents","setAbsents","setLates","prev","axios","get","response1","data","response2","concat","course","batch","response3","fetchData","getFilteredData","courseId","response","Card","marginTop","borderBottom","Typography","variant","TextField","select","required","marginBottom","marginRight","SelectProps","native","onChange","target","value","code","filter","c","i","reduce","cnt","cur","Login","id","password","values","setValues","errors","setErrors","changeValue","onSubmit","post","then","res","decodeToken","jwtDecode","token","expiresIn","message","appearance","catch","err","PersonOutline","placeholder","display","gutterBottom","LockOpen","StudentAdd","phone","email","useRef","FormData","Axios","alert","Grid","container","item","xs","Button","StudentEdit","useParams","put","MegaTable","ids","setSearchTerm","setPageNumberProps","totalPage","setReload","selected","setSelected","page","pageNumber","setPageNumber","dense","setDense","rowsPerPage","setAlert","rows","emptyRows","min","justifyContent","margin","flex","Alert","onClose","severity","Tooltip","confirm","delete","float","startIcon","DeleteOutlined","slice","row","isItemSelected","indexOf","labelId","event","selectedIndex","newSelected","handleClick","role","aria-checked","tabIndex","padding","Checkbox","checked","inputProps","scope","marginLeft","Edit","colSpan","Box","mt","Pagination","count","v","FormControlLabel","control","Switch","Students","reload","TeacherAdd","confirm_password","TeacherDetails","paddingBottom","CardActionArea","CardMedia","component","image","CardContent","description","CardActions","gender","address","TeacherEdit","FormControl","FormLabel","RadioGroup","aria-label","Radio","textTransform","multiline","brandIds","brands","src","alt","slug","Teachers","Brands","setBrands","searchTerm","CourseAdd","semester","tags","Set","toUpperCase","error","helperText","sx","onDelete","removeTag","CourseEdit","subcategoryIds","alertShow","setAlertShow","Courses","AttendanceAdd","Date","toJSON","loading","setLoading","filterData","items","l","p","s","AttendanceEdit","categoryIds","setCourseId","setDate","Attendances","statusCode","App","teacherLoggedIn","exact","path","Boolean","hostname","match","init","sessionExpiresIn","teacherReducer","Object","keys","rootReducer","combineReducers","middleware","thunk","persistedState","serializedState","localStorage","getItem","JSON","parse","loadState","store","createStore","compose","applyMiddleware","subscribe","stringify","setItem","saveState","getState","ReactDOM","render","StrictMode","autoDismiss","autoDismissTimeout","document","getElementById"],"mappings":"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","file":"static/js/main.9e0fa14a.chunk.js","sourcesContent":["import React, {useEffect, useState} from 'react'\r\nimport './MenuSidebar.css'\r\nimport {Link, NavLink, useHistory} from 'react-router-dom'\r\nimport {ExpandMoreOutlined,\r\n        ExpandLessOutlined,\r\n        HomeOutlined,\r\n        SupervisorAccountOutlined,\r\n        PermIdentity,\r\n        AttachMoneyOutlined,\r\n        QuestionAnswerOutlined,\r\n        PhoneIphoneOutlined,\r\n        EmailOutlined,\r\n        } from '@material-ui/icons';\r\nimport { useSelector } from 'react-redux';\r\n\r\n    \r\nconst SideBar = () => {\r\n    const { teacherInfo } = useSelector(state => state.teacher)\r\n    const [open, setOpen] = useState({\r\n        dashboardDrawer: true,\r\n        teacherDrawer: false,\r\n        courseDrawer: false,\r\n        attendanceDrawer: false,\r\n        studentDrawer: false,\r\n        paymentDrawer: false\r\n    })\r\n\r\n    const history = useHistory()\r\n\r\n    useEffect(() => {\r\n        if(history.location.pathname !== \"/\") {\r\n            setOpen({\r\n                dashboardDrawer: false\r\n            })\r\n        }\r\n    }, [])\r\n\r\n    const openDrawer = type => e => {\r\n        e.preventDefault()\r\n\r\n        if(type === 'dashboardDrawer') {\r\n            setOpen({[type]: true})\r\n            history.push('/')\r\n        }\r\n\r\n        if(window.innerWidth > 1024) {\r\n            switch(type) {\r\n                case 'teacherDrawer':\r\n                    setOpen({ ...open, dashboardDrawer: false, [type]: !open.teacherDrawer})\r\n                break\r\n                case 'courseDrawer':\r\n                    setOpen({...open, dashboardDrawer: false, [type]: !open.courseDrawer})\r\n                break\r\n                case 'attendanceDrawer':\r\n                    setOpen({ ...open, dashboardDrawer: false, [type]: !open.attendanceDrawer})\r\n                break\r\n                case 'studentDrawer':\r\n                    setOpen({ ...open, dashboardDrawer: false, [type]: !open.studentDrawer})\r\n                break\r\n                case 'paymentDrawer':\r\n                    setOpen({...open, dashboardDrawer: false, [type]: !open.paymentDrawer})\r\n                break  \r\n            }\r\n        } else {\r\n            switch(type) {\r\n                case 'teacherDrawer':\r\n                    setOpen({dashboardDrawer: false, [type]: !open.teacherDrawer})\r\n                break\r\n                case 'courseDrawer':\r\n                    setOpen({...open, dashboardDrawer: false, [type]: !open.courseDrawer})\r\n                break\r\n                case 'attendanceDrawer':\r\n                    setOpen({ ...open, dashboardDrawer: false, [type]: !open.attendanceDrawer})\r\n                break\r\n                case 'studentDrawer':\r\n                    setOpen({ ...open, dashboardDrawer: false, [type]: !open.studentDrawer})\r\n                break\r\n                case 'paymentDrawer':\r\n                    setOpen({dashboardDrawer: false, [type]: !open.paymentDrawer})\r\n                break\r\n            }\r\n        }\r\n    };\r\n\r\n\r\n    return (\r\n        <div className=\"sidebar\">\r\n            <Link to=\"/\" className=\"sidebar__logo\">\r\n                <PermIdentity/> Admin Panel \r\n            </Link>\r\n            <div className=\"sidebar__item\">\r\n                <div onClick={openDrawer('dashboardDrawer')} className={`sidebar__itemIcon ${open.dashboardDrawer && 'sidebar__itemIconBg'}`}>\r\n                    <div className=\"sidebar__itemIconLeft\">\r\n                        <HomeOutlined /> <span> Dashboard </span>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n            <div className=\"sidebar__item\">\r\n                <div onClick={openDrawer('teacherDrawer')} className={`sidebar__itemIcon ${open.teacherDrawer && 'sidebar__itemIconBg'}`}>\r\n                    <div className=\"sidebar__itemIconLeft\">\r\n                        <SupervisorAccountOutlined/> <span> Teacher </span>\r\n                    </div>\r\n                    <span> {open.teacherDrawer ? <ExpandLessOutlined/> : <ExpandMoreOutlined/>} </span>\r\n                </div>\r\n                <div className={`sidebar__itemDrawer ${open.teacherDrawer && 'sidebar__itemDrawerOpen'}`}>\r\n                    <NavLink activeClassName=\"sidebar__itemDrawerActive\" to=\"/teachers\">teachers</NavLink>\r\n                    <NavLink activeClassName=\"sidebar__itemDrawerActive\" to={`/teacher/${teacherInfo._id}`}>teacher Detail</NavLink>\r\n                </div>\r\n            </div>\r\n            <div className=\"sidebar__item\">\r\n                <div onClick={openDrawer('courseDrawer')} className={`sidebar__itemIcon ${open.courseDrawer && 'sidebar__itemIconBg'}`}>\r\n                    <div className=\"sidebar__itemIconLeft\">\r\n                        <AttachMoneyOutlined /> <span> courses </span>\r\n                    </div>\r\n                    <span> {open.courseDrawer ? <ExpandLessOutlined/> : <ExpandMoreOutlined/>} </span>\r\n                </div>\r\n                <div className={`sidebar__itemDrawer ${open.courseDrawer && 'sidebar__itemDrawerOpen'}`}>\r\n                    <NavLink activeClassName=\"sidebar__itemDrawerActive\" to=\"/courses\">courses</NavLink>\r\n                    <NavLink activeClassName=\"sidebar__itemDrawerActive\" to=\"/course/add\">course Add</NavLink>\r\n                </div>\r\n            </div>\r\n            <div className=\"sidebar__item\">\r\n                <div onClick={openDrawer('attendanceDrawer')} className={`sidebar__itemIcon ${open.attendanceDrawer && 'sidebar__itemIconBg'}`}>\r\n                    <div className=\"sidebar__itemIconLeft\">\r\n                        <SupervisorAccountOutlined/> <span> attendance </span>\r\n                    </div>\r\n                    <span> {open.attendanceDrawer ? <ExpandLessOutlined/> : <ExpandMoreOutlined/>} </span>\r\n                </div>\r\n                <div className={`sidebar__itemDrawer ${open.attendanceDrawer && 'sidebar__itemDrawerOpen'}`}>\r\n                    <NavLink activeClassName=\"sidebar__itemDrawerActive\" to=\"/attendances\">all attendance</NavLink>\r\n                    <NavLink activeClassName=\"sidebar__itemDrawerActive\" to=\"/attendance/add\">attendance Add</NavLink>\r\n                </div>\r\n            </div>\r\n            <div className=\"sidebar__item\">\r\n                <div onClick={openDrawer('studentDrawer')} className={`sidebar__itemIcon ${open.studentDrawer && 'sidebar__itemIconBg'}`}>\r\n                    <div className=\"sidebar__itemIconLeft\">\r\n                        <SupervisorAccountOutlined/> <span> Student </span>\r\n                    </div>\r\n                    <span> {open.studentDrawer ? <ExpandLessOutlined/> : <ExpandMoreOutlined/>} </span>\r\n                </div>\r\n                <div className={`sidebar__itemDrawer ${open.studentDrawer && 'sidebar__itemDrawerOpen'}`}>\r\n                    <NavLink activeClassName=\"sidebar__itemDrawerActive\" to=\"/students\">All students</NavLink>\r\n                    <NavLink activeClassName=\"sidebar__itemDrawerActive\" to=\"/student/add\">Student Add</NavLink>\r\n                </div>\r\n            </div>\r\n            <div className=\"sidebar__item\">\r\n                <div onClick={openDrawer('paymentDrawer')} className={`sidebar__itemIcon ${open.paymentDrawer && 'sidebar__itemIconBg'}`}>\r\n                    <div className=\"sidebar__itemIconLeft\">\r\n                        <AttachMoneyOutlined /> <span> Payments </span>\r\n                    </div>\r\n                    <span> {open.paymentDrawer ? <ExpandLessOutlined/> : <ExpandMoreOutlined/>} </span>\r\n                </div>\r\n                <div className={`sidebar__itemDrawer ${open.paymentDrawer && 'sidebar__itemDrawerOpen'}`}>\r\n                    <NavLink activeClassName=\"sidebar__itemDrawerActive\" to=\"#\">Add Payment</NavLink>\r\n                    <NavLink activeClassName=\"sidebar__itemDrawerActive\" to=\"#\">All Payments</NavLink>\r\n                    <NavLink activeClassName=\"sidebar__itemDrawerActive\" to=\"#\">Payment Invoice</NavLink>\r\n                </div>\r\n            </div>\r\n\r\n\r\n\r\n            <div className=\"sidebar__contact\">\r\n                <div className=\"sidebar__contactHeading\">\r\n                    <QuestionAnswerOutlined /> Need Help\r\n                </div>\r\n                <div className=\"sidebar__contactItem\">\r\n                    <PhoneIphoneOutlined /> +880 {\" \"} 16846 {\" \"} 80383\r\n                </div>\r\n                <div className=\"sidebar__contactItem\">\r\n                    <EmailOutlined /> mdriaz9587@gmail.com\r\n                </div>\r\n                <div className=\"sidebar__contactItem\">\r\n                    Copy Rights &copy; 2020\r\n                </div>\r\n            </div>\r\n\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default SideBar\r\n","import React from 'react'\r\nimport './TopBar.css'\r\nimport { \r\n         LocalHospitalOutlined,\r\n         MenuOutlined, \r\n         SearchOutlined, \r\n         PersonOutlineOutlined,\r\n         FullscreenOutlined,\r\n         NotificationsOutlined,\r\n         ExitToApp\r\n        } from '@material-ui/icons';\r\nimport { useDispatch } from 'react-redux';\r\nimport * as Types from '../store/actions/types';\r\nimport { useHistory } from 'react-router-dom'\r\n\r\n\r\n          \r\nfunction TopBar() {\r\n    \r\n    const dispatch = useDispatch()\r\n    const history = useHistory()\r\n\r\n    const logout = (e) => {\r\n        dispatch({\r\n            type: Types.SET_TEACHER,\r\n            payload: {\r\n                teacherInfo: {}\r\n            }\r\n        })\r\n        history.push('/')\r\n    }\r\n    return (\r\n        <div className=\"topbar\">\r\n            <div className=\"topbar__logo\">\r\n                <LocalHospitalOutlined/> HMS \r\n            </div>\r\n            <div className=\"topbar__icons\">\r\n                <MenuOutlined className=\"topbar__iconsBurgerIcon\"/>\r\n                <FullscreenOutlined/>\r\n                <SearchOutlined/>\r\n                <NotificationsOutlined/>\r\n                <PersonOutlineOutlined />\r\n                <ExitToApp onClick={logout}/>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default TopBar\r\n\r\n\r\n","\r\n\r\nexport const SET_TEACHER = 'SET_TEACHER'\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n","import React from 'react';\r\nimport './Headline.css';\r\nimport { Link } from 'react-router-dom';\r\nimport { HomeOutlined } from '@material-ui/icons';\r\n\r\nfunction Headline({headline, title}) {\r\n    return (\r\n        <div className=\"headline\">\r\n            <div className=\"headline__left\">\r\n                {headline}\r\n            </div>\r\n            <div className=\"headline__right\">\r\n                <Link to=\"/\"><HomeOutlined/></Link>&nbsp;&nbsp;/&nbsp;&nbsp;{title}\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Headline;\r\n\r\n\r\n","import React from 'react';\r\nimport ReactLoading from 'react-loading';\r\n \r\nconst Loader = ({ type, color }) => (\r\n    <ReactLoading type={type} color={color} height={50} width={50} />\r\n);\r\n \r\nexport default Loader;","import React from 'react'\r\nimport Loader from './loader'\r\nimport './Loader.css'\r\n\r\nfunction FullScreenLoader() {\r\n    return (\r\n        <div className=\"fullScreenLoader\">\r\n            <Loader type=\"bars\" color=\"red\" />\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default FullScreenLoader\r\n","import React, { useEffect, useState } from 'react';\r\nimport { withStyles, makeStyles } from '@material-ui/core/styles';\r\nimport Table from '@material-ui/core/Table';\r\nimport TableBody from '@material-ui/core/TableBody';\r\nimport TableCell from '@material-ui/core/TableCell';\r\nimport TableContainer from '@material-ui/core/TableContainer';\r\nimport TableHead from '@material-ui/core/TableHead';\r\nimport TableRow from '@material-ui/core/TableRow';\r\nimport {Chip } from '@material-ui/core';\r\nimport FullScreenLoader  from '../components/loader/FullSreenLoader'\r\n\r\n\r\n\r\n\r\nconst StyledTableCell = withStyles(() => ({\r\n  head: {\r\n    backgroundColor: \"#cfebdc\",\r\n    color: \"black\",\r\n    fontWeight: \"bold\"\r\n  },\r\n  body: {\r\n    fontSize: 14,\r\n  },\r\n}))(TableCell);\r\n\r\nconst StyledTableRow = withStyles((theme) => ({\r\n  root: {\r\n    '&:nth-of-type(odd)': {\r\n      backgroundColor: theme.palette.action.hover,\r\n    },\r\n  },\r\n}))(TableRow);\r\n\r\n\r\n\r\nconst useStyles = makeStyles({\r\n  table: {\r\n    minWidth: 900,\r\n  },\r\n});\r\n\r\n\r\nexport const CustomizedTables = ({students, attendances}) => {\r\n  const classes = useStyles();\r\n\r\n\r\n\r\n  return (\r\n    <TableContainer>\r\n\r\n      <Table className={classes.table}>\r\n        <TableHead>\r\n          <TableRow>\r\n            <StyledTableCell>Serial No</StyledTableCell>\r\n            <StyledTableCell>Student Id</StyledTableCell>\r\n            <StyledTableCell>Student Name</StyledTableCell>\r\n            {\r\n              attendances ? attendances.map((attendance, index) => (\r\n                <StyledTableCell key={index}>Lecture: {index+1}<br/>{attendance.date}</StyledTableCell>\r\n              ))\r\n              :\r\n              <FullScreenLoader/>\r\n            }\r\n          </TableRow>\r\n        </TableHead>\r\n        <TableBody>\r\n          {students.length ? students.sort((a, b) => a.student_id > b.student_id && 1 || -1).map((student, index) => (\r\n            <StyledTableRow key={index}>\r\n              <StyledTableCell>{index+1}</StyledTableCell>\r\n              <StyledTableCell>{student.student_id}</StyledTableCell>\r\n              <StyledTableCell>{student.name}</StyledTableCell>\r\n              {\r\n                attendances ? attendances.map((attendance, index) => (\r\n                  <StyledTableCell key={index}>\r\n                    {attendance.present.includes(student.student_id) && <Chip size='small' label=\"Present\" style={{background: \"green\", color: \"white\"}} />}\r\n                    {attendance.absent.includes(student.student_id) && <Chip size='small' label=\"Absent\" color='secondary' />}\r\n                    {attendance.late.includes(student.student_id) && <Chip size='small' label=\"Late\" color='error' />}\r\n                  </StyledTableCell>\r\n                ))\r\n                :\r\n                <FullScreenLoader/>\r\n              }\r\n            </StyledTableRow>\r\n          ))\r\n          :\r\n          <FullScreenLoader/>\r\n        }\r\n        </TableBody>\r\n      </Table>\r\n    </TableContainer>\r\n  )\r\n}\r\n","import React, { useEffect, useState } from 'react';\r\nimport { withStyles, makeStyles } from '@material-ui/core/styles';\r\nimport Table from '@material-ui/core/Table';\r\nimport TableBody from '@material-ui/core/TableBody';\r\nimport TableCell from '@material-ui/core/TableCell';\r\nimport TableContainer from '@material-ui/core/TableContainer';\r\nimport TableHead from '@material-ui/core/TableHead';\r\nimport TableRow from '@material-ui/core/TableRow';\r\nimport {Chip } from '@material-ui/core';\r\nimport FullScreenLoader  from '../components/loader/FullSreenLoader'\r\n\r\n\r\n\r\nconst StyledTableCell = withStyles(() => ({\r\n  head: {\r\n    backgroundColor: \"#cfebdc\",\r\n    color: \"black\",\r\n    fontWeight: \"bold\"\r\n  },\r\n  body: {\r\n    fontSize: 14,\r\n  },\r\n}))(TableCell);\r\n\r\nconst StyledTableRow = withStyles((theme) => ({\r\n  root: {\r\n    '&:nth-of-type(odd)': {\r\n      backgroundColor: theme.palette.action.hover,\r\n    },\r\n  },\r\n}))(TableRow);\r\n\r\n\r\n\r\nconst useStyles = makeStyles({\r\n  table: {\r\n    minWidth: 900\r\n  },\r\n});\r\n\r\n\r\nexport const ReportTable2 = ({students, attendances, presents, absents, lates}) => {\r\n  const classes = useStyles();\r\n\r\n  console.log(lates)\r\n\r\n  return (\r\n    <TableContainer>\r\n      <Table className={classes.table}>\r\n        <TableHead>\r\n          <TableRow>\r\n            <StyledTableCell>Serial No</StyledTableCell>\r\n            <StyledTableCell>Student Id</StyledTableCell>\r\n            <StyledTableCell>Student Name</StyledTableCell>\r\n            <StyledTableCell>Total Lecture</StyledTableCell>\r\n            <StyledTableCell>Total Present</StyledTableCell>\r\n            <StyledTableCell>Total Absent</StyledTableCell>\r\n            <StyledTableCell>Total Late</StyledTableCell>\r\n            <StyledTableCell>Present Percentage</StyledTableCell>\r\n          </TableRow>\r\n        </TableHead>\r\n        <TableBody>\r\n          {students.length ? students.sort((a, b) => a.student_id > b.student_id && 1 || -1).map((student, index) => (\r\n            <StyledTableRow key={index}>\r\n              <StyledTableCell>{index+1}</StyledTableCell>\r\n              <StyledTableCell>{student.student_id}</StyledTableCell>\r\n              <StyledTableCell>{student.name}</StyledTableCell>\r\n              <StyledTableCell>{attendances.length}</StyledTableCell>\r\n              <StyledTableCell>{presents[student.student_id] ? presents[student.student_id] : 0}</StyledTableCell>\r\n              <StyledTableCell>{absents[student.student_id] ? absents[student.student_id] : 0}</StyledTableCell>\r\n              <StyledTableCell>{lates[student.student_id] ? lates[student.student_id] : 0}</StyledTableCell>\r\n              <StyledTableCell>{presents[student.student_id] ? Math.ceil(presents[student.student_id]/attendances.length*100) : 0}%</StyledTableCell>\r\n            </StyledTableRow>\r\n          ))\r\n        :\r\n        <FullScreenLoader/>\r\n        }\r\n        </TableBody>\r\n      </Table>\r\n    </TableContainer>\r\n  )\r\n}\r\n","import React, { useEffect, useState } from 'react'\r\nimport './Dashboard.css'\r\nimport Headline from './Headline'\r\nimport {CustomizedTables} from './Table'\r\nimport {Card, TextField, Typography} from '@material-ui/core';\r\nimport { useSelector } from 'react-redux'\r\nimport axios from 'axios'\r\nimport { useToasts } from 'react-toast-notifications'\r\nimport { ReportTable2 } from './ReportTable2';\r\n\r\n\r\nconst Dashboard = React.memo(() => {\r\n    const { teacherInfo } = useSelector(state => state.teacher)\r\n    const [attendances, setAttendances] = useState('')\r\n    const[students, setStudents] = useState([])\r\n    const[courses, setCourses] = useState('')\r\n    const { addToast } = useToasts();\r\n    const [presents, setPresents] = useState([])\r\n    const [absents, setAbsents] = useState([])\r\n    const [lates, setLates] = useState([])\r\n    const [finalPresentsArray, setFinalPresentsArray] = useState([])\r\n    // const [finalAbsentsArray, setFinalAbsentsArray] = useState([])\r\n\r\n\r\n\r\n\r\n    useEffect(() => {\r\n        setPresents(prev => [])\r\n        setAbsents(prev => [])\r\n        setLates(prev => [])\r\n        const fetchData = async() => {\r\n            const response1 = await axios.get(`/api/course/get-courses-by-teacher-id/${teacherInfo._id}`)\r\n            setCourses(response1.data.courses)\r\n            const response2 = await axios.get(`/api/attendance/get-filter-attendances/${teacherInfo._id}?courseId=${response1.data.courses[0]._id}`)\r\n            setAttendances(response2.data.attendances)\r\n            response2.data.attendances.map(attendance => {\r\n                setPresents(prev => prev.concat(attendance.present))\r\n                setAbsents(prev => prev.concat(attendance.absent))\r\n                setLates(prev => prev.concat(attendance.late))\r\n            })\r\n            response2.data.attendances[0].course.batch.map(async(b) => {\r\n                const response3 = await axios.get(`/api/student/get-students-by-batch/${b}`)\r\n                setStudents(prev => prev.concat(response3.data.students))\r\n\r\n            })\r\n        }\r\n        fetchData()\r\n    }, [])\r\n\r\n    // console.log(finalAbsentsArray)\r\n\r\n    const getFilteredData = async(courseId) => {\r\n        setPresents(prev => [])\r\n        setAbsents(prev => [])\r\n        setLates(prev => [])\r\n        setStudents(prev => [])\r\n        const response = await axios.get(`/api/attendance/get-filter-attendances/${teacherInfo._id}?courseId=${courseId}`)\r\n        setAttendances(response.data.attendances)\r\n        response.data.attendances.map(attendance => {\r\n            setPresents(prev => prev.concat(attendance.present))\r\n            setAbsents(prev => prev.concat(attendance.absent))\r\n            setLates(prev => prev.concat(attendance.late))\r\n        })\r\n        response.data.attendances[0].course.batch.map(async(b) => {\r\n            const response = await axios.get(`/api/student/get-students-by-batch/${b}`)\r\n            setStudents(prev => prev.concat(response.data.students))\r\n        })\r\n    }\r\n\r\n    return (\r\n        <div className=\"dashboard\">\r\n            <Headline headline=\"Quick Statistics\" title=\"Dashboard\"/>\r\n            <div className=\"dashboard__body\">\r\n\r\n                <Card className=\"dashboard__bodyThirdRow\">\r\n                    <div style={{color: \"#E57498\", marginTop: 10, borderBottom: '1px solid rgb(240, 236, 236)'}}>\r\n                        <Typography variant=\"h5\">Attendance Report</Typography>\r\n                    </div>\r\n                    <form>\r\n                    <TextField select required style={{marginTop: 10, marginBottom: 10,  marginRight: 10}}\r\n                        SelectProps={{ native: true }}\r\n                        onChange={e => getFilteredData(e.target.value)}\r\n                        variant=\"outlined\">\r\n                            <option value=\"fall-21\">Fall-21</option>\r\n                            {/* {\r\n                                courses && courses.filter(course => course._id !== courses[0]._id).map((c, i) => (\r\n                                    <option key={i} value={c._id}>{c.code}, {c.title}</option>\r\n                                ))\r\n                            } */}\r\n                    </TextField>\r\n                    <TextField select required style={{marginTop: 10, marginBottom: 10}}\r\n                        SelectProps={{ native: true }}\r\n                        onChange={e => getFilteredData(e.target.value)}\r\n                        variant=\"outlined\">\r\n                            <option value={courses && courses[0]._id}>{courses && courses[0].code}, {courses && courses[0].title}</option>\r\n                            {\r\n                                courses && courses.filter(course => course._id !== courses[0]._id).map((c, i) => (\r\n                                    <option key={i} value={c._id}>{c.code}, {c.title}</option>\r\n                                ))\r\n                            }\r\n                    </TextField>\r\n                    </form>\r\n                    <div className='dashboard__bodyThirdRowTable'>\r\n                        <CustomizedTables students={students} attendances={attendances} />\r\n                    </div>\r\n                    <div style={{color: \"#E57498\", marginTop: 10, marginBottom: 10, borderBottom: '1px solid rgb(240, 236, 236)'}}>\r\n                        <Typography variant=\"h5\">Attendance Result</Typography>\r\n                    </div>\r\n                    <div className='dashboard__bodyThirdRowTable'>\r\n                        <ReportTable2 students={students} attendances={attendances} \r\n                            presents={presents.reduce((cnt, cur) => (cnt[cur] = cnt[cur] + 1 || 1, cnt), {})}\r\n                            absents={absents.reduce((cnt, cur) => (cnt[cur] = cnt[cur] + 1 || 1, cnt), {})}\r\n                            lates={lates.reduce((cnt, cur) => (cnt[cur] = cnt[cur] + 1 || 1, cnt), {})}\r\n                        />\r\n                    </div>\r\n                </Card>\r\n\r\n            \r\n            </div>\r\n        </div>\r\n    )\r\n})\r\n\r\nexport default Dashboard\r\n","import React, { useState } from 'react'\r\nimport { PersonOutline, LockOpen } from '@material-ui/icons';\r\nimport { useToasts } from 'react-toast-notifications';\r\nimport './Login.css'\r\nimport {Link, useHistory} from 'react-router-dom'\r\nimport { useDispatch } from 'react-redux';\r\nimport { Typography } from '@material-ui/core';\r\nimport axios from 'axios';\r\nimport * as Types from '../../store/actions/types';\r\nimport jwtDecode from 'jwt-decode'\r\n\r\n\r\nfunction Login() {\r\n    const[values, setValues] = useState({\r\n        id: '',\r\n        password: '',\r\n    })\r\n\r\n    const [errors, setErrors] = useState({})\r\n    const { addToast } = useToasts();\r\n    const history = useHistory()\r\n    const dispatch = useDispatch()\r\n\r\n    const changeValue = name => e => {\r\n        setValues({ ...values, [name]: e.target.value });\r\n    };\r\n\r\n    const submit = e => {\r\n        e.preventDefault()\r\n        axios.post('/api/teacher/login', values)\r\n        .then(res => {\r\n            let decodeToken = jwtDecode(res.data.token)\r\n            dispatch({\r\n                type: Types.SET_TEACHER,\r\n                payload: {\r\n                    teacherInfo: {\r\n                        _id: decodeToken._id,\r\n                        expiresIn: res.data.expiresIn\r\n                    }\r\n                }\r\n            })\r\n            addToast(res.data.message + '. Session will expire in ' + res.data.expiresIn/3600 + ' hours', { appearance: 'success' });\r\n            history.push('/')\r\n        })\r\n        .catch(err => {\r\n            console.log(err.response.data)\r\n            setErrors(err.response.data)\r\n        })\r\n    }\r\n    return (\r\n        <div className=\"login\">\r\n            <form onSubmit={submit} className=\"login__form\">\r\n                <h1>Login</h1>\r\n                <div className=\"text_box\">\r\n                    <PersonOutline />\r\n                    <input onChange={changeValue('id')} className=\"user-name\" type=\"text\" placeholder=\"Id\"/>\r\n                </div>\r\n                {errors.id ?  <Typography variant=\"caption\" color=\"secondary\" display=\"block\" gutterBottom>{errors.id}</Typography> : \"\"}\t\r\n                <div className=\"text_box\">\r\n                    <LockOpen />\r\n                    <input onChange={changeValue('password')} className=\"password\" type=\"text\" placeholder=\"Password\"/>\r\n                </div>\r\n                {errors.password ?  <Typography variant=\"caption\" color=\"secondary\" display=\"block\" gutterBottom>{errors.password}</Typography> : \"\"}\r\n                <div className=\"button\">\r\n                    <input className=\"btn\" type=\"submit\" placeholder=\"\" name=\"\" value=\"Log In\" />\r\n                </div>\r\n                <Link to=\"/teacher/add\"><Typography color=\"primary\">Don't have account? Please click here for registration. </Typography></Link>\r\n            </form>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Login\r\n","import React, { useState, useRef } from 'react'\r\n\r\nimport '../Student.css'\r\n\r\nimport { Button, Card, Grid, TextField } from '@material-ui/core'\r\n\r\n\r\nimport Axios from 'axios'\r\n\r\nimport Headline from '../../Headline'\r\n\r\n\r\nfunction StudentAdd() {  \r\n    const[values, setValues] = useState({\r\n        name: '',\r\n        student_id: '',\r\n        batch: '',\r\n        phone: '',\r\n        email: ''\r\n    })\r\n    const fileInputRef = useRef()\r\n    const [tempFile, setTempFile] = useState('')\r\n    const [formData, setFormData] = useState(new FormData())\r\n    const [hoverStyle, setHoverStyle] = useState(false)\r\n\r\n    console.log(values)\r\n\r\n    const changeValue = name => e => {\r\n        setValues({ ...values, [name]: e.target.value });\r\n    };\r\n\r\n\r\n\r\n    const submit = (e) => {\r\n        e.preventDefault()\r\n        Axios.post(`/api/student/add`, values)\r\n        .then(res => {\r\n            alert(res.data.message)\r\n        })\r\n        .catch(err => {\r\n            console.log(err)\r\n        })\r\n\r\n    }\r\n    return (\r\n        <div className=\"studentAdd\">\r\n            <Headline headline=\"student Add\" title='student Add'/>\r\n            <Card>\r\n                <form onSubmit={submit}>\r\n                    <Grid container item xs={12}>\r\n                        <Grid item xs={12} className=\"student__inputGroup\">\r\n                            <TextField required placeholder=\"John Doe\"  label=\"Student Name\" onChange={changeValue('name')} variant=\"outlined\" />\r\n                            <TextField required placeholder=\"1901020010\" label=\"Student Id\" onChange={changeValue('student_id')} variant=\"outlined\" />\r\n                            <TextField select \r\n                                SelectProps={{ native: true }}\r\n                                onChange={changeValue('batch')}\r\n                                variant=\"outlined\">\r\n                                    <option value=''>Select batch</option>\r\n                                    <option value='spring-19'>spring-19</option>\r\n                                    <option value='fall-19'>Fall-19</option>\r\n                                    <option value='summer-21'>summer-19</option>\r\n                            </TextField>\r\n                            <TextField placeholder=\"01712012xxx\" label=\"Phone\" onChange={changeValue('phone')} variant=\"outlined\" />\r\n                            <TextField placeholder=\"johndoe@gmail.com\" label=\"Email\" onChange={changeValue('email')} variant=\"outlined\" />\r\n                \r\n                        </Grid>\r\n                        <Button style={{marginTop: 20}} type=\"submit\" variant=\"contained\" color=\"primary\"> Add student </Button>\r\n                    </Grid>\r\n                </form>\r\n            </Card>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default StudentAdd\r\n","import React, { useEffect, useState, useRef } from 'react'\r\nimport '../Student.css'\r\nimport { Avatar, Box, Button, Card, Grid, TextField, Typography, Tooltip } from '@material-ui/core'\r\nimport DeleteOutlineIcon from '@material-ui/icons/DeleteOutline';\r\nimport PanoramaOutlinedIcon from '@material-ui/icons/PanoramaOutlined';\r\nimport Axios from 'axios'\r\nimport Headline from '../../Headline'\r\nimport { useParams } from 'react-router';\r\n\r\n\r\nfunction StudentEdit() {  \r\n    const[values, setValues] = useState({\r\n        name: '',\r\n        student_id: '',\r\n        batch: '',\r\n        phone: '',\r\n        email: ''\r\n    })\r\n\r\n\r\n    const {id} = useParams()\r\n\r\n    useEffect(() => {\r\n        Axios.get(`/api/student/get-student-by-id/${id}`)\r\n        .then(res => {\r\n            setValues(prev => res.data.student)\r\n        })\r\n        .catch(err => {\r\n            console.log(err)\r\n        })\r\n    }, [])\r\n\r\n    const changeValue = name => e => {\r\n        setValues({ ...values, [name]: e.target.value });  \r\n    };\r\n\r\n    const submit = (e) => {\r\n        e.preventDefault()\r\n        Axios.put(`/api/student/edit/${id}`, values)\r\n        .then(res => {\r\n            alert(res.data.message)\r\n        })\r\n        .catch(err => {\r\n            console.log(err)\r\n        })\r\n    }\r\n\r\n    return (\r\n        <div className=\"studentEdit\">\r\n            <Headline headline=\"Category Edit\" title='Category Edit'/>\r\n            <Card>\r\n            <form onSubmit={submit}>\r\n                    <Grid container item xs={12}>\r\n                        <Grid item xs={12} className=\"student__inputGroup\">\r\n                            <TextField required value={values.name} placeholder=\"John Doe\"  label=\"Student Name\" onChange={changeValue('name')} variant=\"outlined\" />\r\n                            <TextField required value={values.student_id} placeholder=\"1901020010\" label=\"Student Id\" onChange={changeValue('student_id')} variant=\"outlined\" />\r\n                            <TextField select \r\n                                SelectProps={{ native: true }}\r\n                                onChange={changeValue('batch')}\r\n                                variant=\"outlined\">\r\n                                    <option value={values.batch}>{values.batch}</option>\r\n                                    <option value='spring-19'>spring-19</option>\r\n                                    <option value='fall-19'>Fall-19</option>\r\n                                    <option value='summer-21'>summer-19</option>\r\n                            </TextField>\r\n                            <TextField placeholder=\"01712012xxx\" value={values.phone} label=\"Phone\" onChange={changeValue('phone')} variant=\"outlined\" />\r\n                            <TextField placeholder=\"johndoe@gmail.com\" value={values.email} label=\"Email\" onChange={changeValue('email')} variant=\"outlined\" />\r\n                \r\n                        </Grid>\r\n                        <Button style={{marginTop: 20}} type=\"submit\" variant=\"contained\" color=\"primary\"> Update data </Button>\r\n                    </Grid>\r\n                </form>\r\n            </Card>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default StudentEdit\r\n","import React from 'react';\r\nimport {Table, TableBody, TableCell, TableContainer, TableRow, Checkbox, FormControlLabel, Switch, Box, Button, TextField, Tooltip, Typography} from '@material-ui/core';\r\nimport {Pagination, Alert} from '@material-ui/lab';\r\nimport {  DeleteOutlined, Edit } from '@material-ui/icons';\r\nimport { Link } from 'react-router-dom';\r\nimport Axios from 'axios'\r\n\r\n\r\n\r\nfunction MegaTable({students, setSearchTerm, setPageNumberProps, totalPage, setReload}) {\r\n  const [selected, setSelected] = React.useState([]);\r\n  const [page, setPage] = React.useState(0);\r\n  const [pageNumber, setPageNumber] = React.useState(1);\r\n\r\n  const [dense, setDense] = React.useState(false);\r\n  const [rowsPerPage, setRowsPerPage] = React.useState(50);\r\n  const [alert, setAlert] = React.useState(false)\r\n  const rows = students;\r\n\r\n\r\n  // const handleAlert = (e) => {\r\n  //   e.preventDefault()\r\n  //   setAlert(!alert)\r\n  // }\r\n\r\n  const handleClick = (event, name) => {\r\n    const selectedIndex = selected.indexOf(name)\r\n    let newSelected = [];\r\n    if (selectedIndex === -1) {\r\n      newSelected = newSelected.concat(selected, name)\r\n    } else if (selectedIndex === 0) {\r\n      newSelected = newSelected.concat(selected.slice(1))\r\n    } else if (selectedIndex === selected.length - 1) {\r\n      newSelected = newSelected.concat(selected.slice(0, -1))\r\n    } else if (selectedIndex > 0) {\r\n      newSelected = newSelected.concat(\r\n        selected.slice(0, selectedIndex),\r\n        selected.slice(selectedIndex + 1),\r\n      );\r\n    }\r\n    setSelected(newSelected)\r\n  }\r\n\r\n  const changePage = (e, v) => {\r\n    setPageNumber(v)\r\n    setPageNumberProps(v)\r\n  }\r\n\r\n  const handleChangeDense = (event) => {\r\n    setDense(event.target.checked);\r\n  }\r\n\r\n  const deleteProduct = ids => e => {\r\n    e.preventDefault()\r\n    if(ids.length === 0) {\r\n      setAlert(true)\r\n    } else {\r\n      window.confirm(\"Are you sure you wish to delete this item?\") &&\r\n      ids.map(id => {\r\n        Axios.delete(`/api/student/delete/${id}`)\r\n        .then(res => {\r\n          console.log(res.data.message)\r\n          setReload(prev => !prev)\r\n        })\r\n        .catch(err => {\r\n          console.log(err.message)\r\n        })\r\n      })\r\n    }\r\n    \r\n  }\r\n\r\n\r\n  const isSelected = (name) => selected.indexOf(name) !== -1;\r\n\r\n  const emptyRows = rowsPerPage - Math.min(rowsPerPage, rows.length - page * rowsPerPage);\r\n\r\n  return (\r\n    <div >\r\n      <div >\r\n        <div style={{display: 'flex', justifyContent: 'space-between', margin: 15}}>\r\n            <TextField onChange={e => setSearchTerm(e.target.value)} style={{flex: 0.5}} label=\"Search Product\" size=\"small\" variant=\"outlined\" />\r\n            <div style={{flex: 0.5}}>\r\n              {alert ? <Alert onClose={() => {setAlert(!alert)}} severity=\"warning\">Not selected any product!</Alert> : null}\r\n            </div>\r\n        </div>\r\n        \r\n        <Tooltip title=\"Delete category permanently\"><Button onClick={deleteProduct(selected)} size='small' style={{float: 'right', margin: 20}} variant=\"outlined\" color=\"secondary\" startIcon={<DeleteOutlined />}>\r\n           Delete \r\n        </Button></Tooltip> \r\n      \r\n        <TableContainer className=\"megatable__body\">\r\n          <Table size={dense ? 'small' : 'medium'}>\r\n            <TableBody>\r\n              <TableRow>\r\n                  <TableCell style={{fontWeight: 700}}>Select</TableCell>\r\n                  <TableCell style={{fontWeight: 700}}>Student Id</TableCell>\r\n                  <TableCell style={{fontWeight: 700}}>Name</TableCell>\r\n                  <TableCell style={{fontWeight: 700}}>Batch</TableCell>\r\n                  <TableCell style={{fontWeight: 700}}>Phone</TableCell>\r\n                  <TableCell style={{fontWeight: 700}}>Email</TableCell>\r\n                  <TableCell style={{fontWeight: 700}}>Actions</TableCell>\r\n                </TableRow>\r\n                { rows.length === 0 ? <Typography variant=\"h6\" color=\"initial\">No brand found in the filter</Typography> \r\n                :\r\n                rows.slice(page * rowsPerPage, page * rowsPerPage + rowsPerPage).map((row, index) => {\r\n                    const isItemSelected = isSelected(row._id);\r\n                    const labelId = `enhanced-table-checkbox-${index}`;\r\n                    return (\r\n                      <TableRow hover onClick={(event) => handleClick(event, row._id)} role=\"checkbox\" aria-checked={isItemSelected} tabIndex={-1} key={row._id} selected={isItemSelected}>\r\n                        <TableCell padding=\"checkbox\"><Checkbox checked={isItemSelected} inputProps={{ 'aria-labelledby': labelId }}/></TableCell>\r\n                        <TableCell id={labelId} scope=\"row\" padding=\"none\">{row.student_id}</TableCell>\r\n                        <TableCell>{row.name}</TableCell>\r\n                        <TableCell>{row.batch}</TableCell>\r\n                        <TableCell>{row.phone}</TableCell>\r\n                        <TableCell>{row.email}</TableCell>\r\n                        <TableCell>\r\n                          <Link to={`/student/edit/${row._id}`}>\r\n                              <Button size='small' style={{marginLeft: 10}} variant=\"outlined\" color=\"primary\" startIcon={<Edit />}>\r\n                                Edit \r\n                              </Button>\r\n                          </Link>\r\n                        </TableCell>\r\n                      </TableRow>\r\n                    );\r\n                  })}\r\n                  {emptyRows > 0 && (\r\n                    <TableRow style={{ height: (dense ? 33 : 53) * emptyRows }}>\r\n                      <TableCell colSpan={6} />\r\n                    </TableRow>\r\n                  )}\r\n            </TableBody>\r\n          </Table>\r\n        </TableContainer>\r\n\r\n        <Box mt={3} display=\"flex\" justifyContent=\"flex-end\">\r\n          <Pagination \r\n            count={totalPage} color=\"primary\" \r\n            page={pageNumber} \r\n            onChange={changePage}\r\n          />\r\n        </Box>\r\n\r\n      </div>\r\n      <FormControlLabel control={<Switch checked={dense} onChange={handleChangeDense} />} label=\"Dense padding\" />\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default MegaTable","import { Box, Button, ButtonGroup, Card, Typography } from '@material-ui/core'\r\nimport React, { useEffect, useState } from 'react'\r\nimport axios from 'axios'\r\n\r\nimport Headline from '../../Headline'\r\nimport MegaTable from './MegaTable'\r\n\r\n\r\nimport '../Student.css'\r\n\r\nfunction Students() {\r\n    const [students, setStudents] = useState('')\r\n    const [totalPage, setTotalPage] = useState('')\r\n    const [pageNumber, setPageNumber] = useState(1)\r\n    const [itemPerPage, setItemPerPage] = useState(50)\r\n    const [searchTerm, setSearchTerm] = useState('')\r\n    const [reload, setReload] = useState(false)\r\n\r\n\r\n\r\n    useEffect(() => {\r\n            axios.get(`/api/student/all`)\r\n            .then(res => {\r\n                setStudents(res.data.students)\r\n            })\r\n            .catch(err => {\r\n                console.log(err)\r\n            })\r\n        \r\n    }, [reload])\r\n\r\n\r\n\r\n\r\n    return (\r\n        <div className=\"students\">\r\n            <Headline headline=\"All Students\" title='All Students'/>\r\n            <Card>\r\n                <div className=\"students__table\">\r\n                    {\r\n                        students === '' ?\r\n                        <div className=\"\">Loading</div>\r\n                        :\r\n                        // Brands.length === 0 ?\r\n                        // <div className=\"\">No category added</div>\r\n                        // :\r\n                        <MegaTable \r\n                            students = { students } \r\n                            setPageNumberProps={setPageNumber} \r\n                            setSearchTerm={setSearchTerm}\r\n                            totalPage={totalPage}\r\n                            setReload={setReload}\r\n                        />\r\n                    }\r\n                </div>\r\n            </Card>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Students\r\n","import React, { useState, useEffect } from 'react'\r\nimport { PersonOutline, LockOpen } from '@material-ui/icons';\r\nimport { useToasts } from 'react-toast-notifications';\r\nimport './TeacherAdd.css'\r\nimport {Link, useHistory} from 'react-router-dom'\r\nimport { Typography } from '@material-ui/core';\r\nimport axios from 'axios';\r\n\r\n\r\nfunction TeacherAdd() {\r\n    const[values, setValues] = useState({\r\n        id: '',\r\n        password: '',\r\n        confirm_password: ''\r\n    })\r\n    const [errors, setErrors] = useState({})\r\n    const { addToast } = useToasts();\r\n    const history = useHistory()\r\n\r\n    const changeValue = name => e => {\r\n        setValues({ ...values, [name]: e.target.value });\r\n    };\r\n\r\n\r\n    console.log(values)\r\n\r\n    const submit = e => {\r\n        e.preventDefault()\r\n        console.log(values)\r\n        axios.post('/api/teacher/registration', values)\r\n        .then(res => {\r\n            addToast(res.data.message, { appearance: 'success' });\r\n            history.push('/')\r\n        })\r\n        .catch(err => {\r\n            setErrors(err.response.data)\r\n        })\r\n    }\r\n    return (\r\n        <div className=\"teacherAdd\">\r\n            <form onSubmit={submit} className=\"teacherAdd__form\">\r\n                <h1>Registration</h1>\r\n                <div className=\"text_box\">\r\n                    <PersonOutline />\r\n                    <input onChange={changeValue('id')} className=\"user-name\" type=\"text\" placeholder=\"Email/Id\" name=\"\"/>\r\n                </div>\t\r\n                {errors.id ?  <Typography variant=\"caption\" color=\"secondary\" display=\"block\" gutterBottom>{errors.id}</Typography> : \"\"}\r\n                <div className=\"text_box\">\r\n                    <LockOpen />\r\n                    <input onChange={changeValue('password')} className=\"password\" type=\"text\" placeholder=\"Password\" name=\"\"/>\r\n                </div>\t\r\n                {errors.password ?  <Typography variant=\"caption\" color=\"secondary\" display=\"block\" gutterBottom>{errors.password}</Typography> : \"\"}\r\n                <div className=\"text_box\">\r\n                    <LockOpen />\r\n                    <input onChange={changeValue('confirm_password')} className=\"password\" type=\"text\" placeholder=\"Confirm Password\" name=\"\" />\r\n                </div>\r\n                {errors.confirm_password ?  <Typography variant=\"caption\" color=\"secondary\" display=\"block\" gutterBottom>{errors.confirm_password}</Typography> : \"\"}\t\r\n                <div className=\"button\">\r\n                    <input className=\"btn\" type=\"submit\" placeholder=\"\" name=\"\" value=\"Sign In\" />\r\n                </div>\r\n                <Link to=\"/\"><Typography color=\"primary\"> Already have an account? Click here to login. </Typography></Link>\r\n            </form>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default TeacherAdd\r\n","import { Button, ButtonGroup, Card, CardActionArea, CardActions, CardContent, CardMedia, Chip, Typography } from '@material-ui/core'\r\nimport { GetAppOutlined, PictureAsPdfOutlined, PrintOutlined } from '@material-ui/icons'\r\nimport axios from 'axios'\r\nimport React, { useEffect, useState, useRef } from 'react'\r\nimport { Link, useParams } from 'react-router-dom'\r\nimport { useReactToPrint } from 'react-to-print'\r\nimport Headline from '../../Headline'\r\nimport '../Teacher.css'\r\n\r\nfunction TeacherDetails() {\r\n    const[values, setValues] = useState({\r\n        name: '',\r\n        id: '',\r\n        phone: '',\r\n        role: ''\r\n    })\r\n\r\n    let { id } = useParams()\r\n\r\n    useEffect(() => {\r\n        axios.get(`/api/teacher/get-teacher-by-id/${id}`)\r\n        .then(res => {\r\n            setValues(prev => res.data.teacher)\r\n        })\r\n        .catch(err => {\r\n            console.log(err)\r\n        })\r\n    }, [])\r\n \r\n\r\n    return (\r\n        <div className=\"teacherDetails\">\r\n            <Headline headline=\"teacher Details\" title='teacher Details'/>\r\n            <Card className=\"teacherDetails__firstRow\">\r\n                <div style={{color: \"#E57498\", paddingBottom: 10, borderBottom: '1px solid rgb(240, 236, 236)'}}>\r\n                    <Typography variant=\"h5\">Teacher Details</Typography>\r\n                </div>\r\n                <div className=\"teacherDetails__firstRowBody\">\r\n                    <div className=\"teacherDetails__firstRowBodyLeft\">\r\n                        <CardActionArea>\r\n                            <CardMedia\r\n                            component = 'img'\r\n                            // height = '140'\r\n                            image=\"https://picsum.photos/400/300\"\r\n                            title=\"Contemplative Reptile\"\r\n                            />\r\n                            <CardContent>\r\n                            <Typography gutterBottom variant=\"h5\" component=\"h2\">\r\n                                {values.name}\r\n                            </Typography>\r\n                            <Typography variant=\"body2\" color=\"textSecondary\" component=\"p\">{values.description}</Typography>\r\n                            </CardContent>\r\n                        </CardActionArea>\r\n                        <CardActions>\r\n                            <Link to={`/teacher/edit/${id}`}>\r\n                                <Button size=\"small\" color=\"default\" variant=\"contained\">\r\n                                    Edit\r\n                                </Button>\r\n                            </Link>\r\n                            <Button size=\"small\" color=\"secondary\" variant=\"contained\">\r\n                                Delete\r\n                            </Button>\r\n                        </CardActions>\r\n                    </div>\r\n                    <div className=\"teacherDetails__firstRowBodyRight\">\r\n                        <div className=\"teacherDetails__firstRowBodyRightTableScroll\">\r\n                            <table className=\"teacherDetails__firstRowBodyRightTable\">\r\n                                <tr>\r\n                                    <td>Id</td>\r\n                                    <td>{values.id}</td>\r\n                                </tr>\r\n                                <tr>\r\n                                    <td>Role</td>\r\n                                    <td>{values.role}</td>\r\n                                </tr>\r\n                                <tr>\r\n                                    <td>Gender</td>\r\n                                    <td>{values.gender}</td>\r\n                                </tr> \r\n                                <tr>\r\n                                    <td>Address</td>\r\n                                    <td>{values.address}</td>\r\n                                </tr> \r\n                                <tr>\r\n                                    <td>Phone</td>\r\n                                    <td>{values.phone}</td>\r\n                                </tr> \r\n                                <tr>\r\n                                    <td>Email</td>\r\n                                    <td>{values.email}</td>\r\n                                </tr>\r\n                            </table>\r\n                        </div>\r\n\r\n    \r\n                    </div>\r\n                </div>\r\n\r\n            </Card>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default TeacherDetails\r\n","import React, { useEffect, useState, useRef } from 'react'\r\nimport '../Teacher.css'\r\nimport { Button, Card, Grid, TextField, FormControl, FormLabel, RadioGroup, FormControlLabel, Radio } from '@material-ui/core'\r\nimport Axios from 'axios'\r\nimport Headline from '../../Headline'\r\nimport { useParams } from 'react-router';\r\n\r\n\r\nfunction TeacherEdit() {  \r\n    const[values, setValues] = useState({\r\n        name: '',\r\n        id: '',\r\n        phone: '',\r\n        role: '',\r\n        gender: '',\r\n        description: '',\r\n        address: ''\r\n    })\r\n    const {id} = useParams()\r\n\r\n    useEffect(() => {\r\n        Axios.get(`/api/teacher/get-teacher-by-id/${id}`)\r\n        .then(res => {\r\n            setValues(prev => res.data.teacher)\r\n        })\r\n        .catch(err => {\r\n            console.log(err)\r\n        })\r\n    }, [])\r\n\r\n    const changeValue = name => e => {\r\n        setValues({ ...values, [name]: e.target.value });\r\n    };\r\n\r\n    const submit = (e) => {\r\n        e.preventDefault()\r\n        Axios.put(`/api/teacher/edit/${id}`, values)\r\n        .then(res => {\r\n            setValues(res.data.teacher)\r\n            alert(res.data.message)\r\n        })\r\n        .catch(err => {\r\n            console.log(err)\r\n        })\r\n    }\r\n\r\n    console.log(values)\r\n    return (\r\n        <div className=\"teacherEdit\">\r\n            <Headline headline=\"Teacher Edit\" title='Teacher Edit'/>\r\n            <Card>\r\n                <form onSubmit={submit}>\r\n                    <Grid container item xs={12}>\r\n                        <Grid item xs={12} className=\"teacher__inputGroup\">\r\n                            <TextField value={values.id} label=\"Id\" onChange={changeValue('id')} variant=\"outlined\" />\r\n                            <TextField value={values.name} label=\"Name\" onChange={changeValue('name')} variant=\"outlined\" />\r\n                            <TextField value={values.email} label=\"Email\" onChange={changeValue('email')} variant=\"outlined\" />   \r\n                            <TextField value={values.phone} label=\"Phone\" onChange={changeValue('phone')} variant=\"outlined\" />\r\n                            <FormControl onChange={changeValue('gender')} component=\"fieldset\">\r\n                                <FormLabel component=\"legend\">Gender</FormLabel>\r\n                                <RadioGroup row aria-label=\"gender\" name=\"row-radio-buttons-group\">\r\n                                    <FormControlLabel checked={values.gender == 'female' ? true : false} value=\"female\" control={<Radio />} label=\"Female\" />\r\n                                    <FormControlLabel checked={values.gender == 'male' ? true : false} value=\"male\" control={<Radio />} label=\"Male\" />\r\n                                </RadioGroup>\r\n                            </FormControl>\r\n                            <TextField select\r\n                                SelectProps={{ native: true }}\r\n                                onChange={changeValue('role')}\r\n                                variant=\"outlined\">\r\n                                    {\r\n                                        values.role ?\r\n                                        <option value={values.role} style={{textTransform: 'capitalize'}}>{values.role}</option>\r\n                                        :\r\n                                        <option value=\"\">Select role</option>\r\n                                    }\r\n                                    <option value=\"lecturer\">Lecturer</option>\r\n                                    <option value=\"professor\">Professor</option>\r\n                                    <option value=\"chairman\">Chairman</option>\r\n                            </TextField>\r\n                            <TextField value={values.address} label=\"Address\" onChange={changeValue('address')} variant=\"outlined\" />\r\n                            <TextField value={values.description} label=\"Description\" onChange={changeValue('description')} multiline rows={4} variant=\"outlined\" />\r\n                        </Grid>\r\n                        <Button style={{marginTop: 20}} type=\"submit\" variant=\"contained\" color=\"primary\"> Save changes </Button>\r\n                    </Grid>\r\n                </form>\r\n            </Card>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default TeacherEdit\r\n","import React from 'react';\r\nimport {Table, TableBody, TableCell, TableContainer, TableRow, Checkbox, FormControlLabel, Switch, Box, Button, TextField, Tooltip, Typography} from '@material-ui/core';\r\nimport {Pagination, Alert} from '@material-ui/lab';\r\nimport {  DeleteOutlined, Edit } from '@material-ui/icons';\r\nimport { Link } from 'react-router-dom';\r\nimport Axios from 'axios'\r\n\r\n\r\n\r\nfunction MegaTable({brands, setSearchTerm, setPageNumberProps, totalPage, setReload}) {\r\n  const [selected, setSelected] = React.useState([]);\r\n  const [page, setPage] = React.useState(0);\r\n  const [pageNumber, setPageNumber] = React.useState(1);\r\n\r\n  const [dense, setDense] = React.useState(false);\r\n  const [rowsPerPage, setRowsPerPage] = React.useState(50);\r\n  const [alert, setAlert] = React.useState(false)\r\n  const rows = brands;\r\n\r\n\r\n  // const handleAlert = (e) => {\r\n  //   e.preventDefault()\r\n  //   setAlert(!alert)\r\n  // }\r\n\r\n  const handleClick = (event, name) => {\r\n    const selectedIndex = selected.indexOf(name)\r\n    let newSelected = [];\r\n    if (selectedIndex === -1) {\r\n      newSelected = newSelected.concat(selected, name)\r\n    } else if (selectedIndex === 0) {\r\n      newSelected = newSelected.concat(selected.slice(1))\r\n    } else if (selectedIndex === selected.length - 1) {\r\n      newSelected = newSelected.concat(selected.slice(0, -1))\r\n    } else if (selectedIndex > 0) {\r\n      newSelected = newSelected.concat(\r\n        selected.slice(0, selectedIndex),\r\n        selected.slice(selectedIndex + 1),\r\n      );\r\n    }\r\n    setSelected(newSelected)\r\n  }\r\n\r\n  const changePage = (e, v) => {\r\n    setPageNumber(v)\r\n    setPageNumberProps(v)\r\n  }\r\n\r\n  const handleChangeDense = (event) => {\r\n    setDense(event.target.checked);\r\n  }\r\n\r\n  const deleteProduct = brandIds => e => {\r\n    e.preventDefault()\r\n    if(brandIds.length === 0) {\r\n      setAlert(true)\r\n    } else {\r\n      window.confirm(\"Are you sure you wish to delete this item?\") &&\r\n      brandIds.map(id => {\r\n        Axios.delete(`/api/brand/delete/${id}`)\r\n        .then(res => {\r\n          console.log(res.data.message)\r\n          setReload(prev => !prev)\r\n        })\r\n        .catch(err => {\r\n          console.log(err.message)\r\n        })\r\n      })\r\n    }\r\n    \r\n  }\r\n\r\n\r\n  const isSelected = (name) => selected.indexOf(name) !== -1;\r\n\r\n  const emptyRows = rowsPerPage - Math.min(rowsPerPage, rows.length - page * rowsPerPage);\r\n\r\n  return (\r\n    <div >\r\n      <div >\r\n        <div style={{display: 'flex', justifyContent: 'space-between', margin: 15}}>\r\n            <TextField onChange={e => setSearchTerm(e.target.value)} style={{flex: 0.5}} label=\"Search Product\" size=\"small\" variant=\"outlined\" />\r\n            <div style={{flex: 0.5}}>\r\n              {alert ? <Alert onClose={() => {setAlert(!alert)}} severity=\"warning\">Not selected any product!</Alert> : null}\r\n            </div>\r\n        </div>\r\n        \r\n        <Tooltip title=\"Delete category permanently\"><Button onClick={deleteProduct(selected)} size='small' style={{float: 'right', margin: 20}} variant=\"outlined\" color=\"secondary\" startIcon={<DeleteOutlined />}>\r\n           Delete \r\n        </Button></Tooltip> \r\n      \r\n        <TableContainer className=\"megatable__body\">\r\n          <Table size={dense ? 'small' : 'medium'}>\r\n            <TableBody>\r\n              <TableRow>\r\n                  <TableCell style={{fontWeight: 700}}>Select</TableCell>\r\n                  <TableCell style={{fontWeight: 700}}>Id</TableCell>\r\n                  <TableCell style={{fontWeight: 700}}>Image</TableCell>\r\n                  <TableCell style={{fontWeight: 700}}>Name</TableCell>\r\n                  <TableCell style={{fontWeight: 700}}>Slug</TableCell>\r\n                  <TableCell style={{fontWeight: 700}}>Actions</TableCell>\r\n                </TableRow>\r\n                { rows.length === 0 ? <Typography variant=\"h6\" color=\"initial\">No brand found in the filter</Typography> \r\n                :\r\n                rows.slice(page * rowsPerPage, page * rowsPerPage + rowsPerPage).map((row, index) => {\r\n                    const isItemSelected = isSelected(row._id);\r\n                    const labelId = `enhanced-table-checkbox-${index}`;\r\n                    return (\r\n                      <TableRow hover onClick={(event) => handleClick(event, row._id)} role=\"checkbox\" aria-checked={isItemSelected} tabIndex={-1} key={row._id} selected={isItemSelected}>\r\n                        <TableCell padding=\"checkbox\"><Checkbox checked={isItemSelected} inputProps={{ 'aria-labelledby': labelId }}/></TableCell>\r\n                        <TableCell id={labelId} scope=\"row\" padding=\"none\">{row._id}</TableCell>\r\n                        <TableCell> <img width=\"40px\" height=\"40px\" src={`/uploads/images/brand/${row.image ? row.image : `/uploads/images/brand/no-image.jpg` }`} alt=\"\"/> </TableCell>\r\n                        <TableCell>{row.name}</TableCell>\r\n                        <TableCell>{row.slug}</TableCell>\r\n                        <TableCell>\r\n                          <Link to={`/brand/edit/${row._id}`}>\r\n                              <Button size='small' style={{marginLeft: 10}} variant=\"outlined\" color=\"primary\" startIcon={<Edit />}>\r\n                                Edit \r\n                              </Button>\r\n                          </Link>\r\n                        </TableCell>\r\n                      </TableRow>\r\n                    );\r\n                  })}\r\n                  {emptyRows > 0 && (\r\n                    <TableRow style={{ height: (dense ? 33 : 53) * emptyRows }}>\r\n                      <TableCell colSpan={6} />\r\n                    </TableRow>\r\n                  )}\r\n            </TableBody>\r\n          </Table>\r\n        </TableContainer>\r\n\r\n        <Box mt={3} display=\"flex\" justifyContent=\"flex-end\">\r\n          <Pagination \r\n            count={totalPage} color=\"primary\" \r\n            page={pageNumber} \r\n            onChange={changePage}\r\n          />\r\n        </Box>\r\n\r\n      </div>\r\n      <FormControlLabel control={<Switch checked={dense} onChange={handleChangeDense} />} label=\"Dense padding\" />\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default MegaTable","import { Card } from '@material-ui/core'\r\nimport React, { useEffect, useState } from 'react'\r\nimport axios from 'axios'\r\n\r\nimport Headline from '../../Headline'\r\nimport MegaTable from './MegaTable'\r\n\r\n\r\nimport '../Teacher.css'\r\n\r\nfunction Teachers() {\r\n    const [Brands, setBrands] = useState('')\r\n    const [totalPage, setTotalPage] = useState('')\r\n    const [pageNumber, setPageNumber] = useState(1)\r\n    const [itemPerPage, setItemPerPage] = useState(50)\r\n    const [searchTerm, setSearchTerm] = useState('')\r\n    const [reload, setReload] = useState(false)\r\n\r\n\r\n\r\n    useEffect(() => {\r\n        if(searchTerm) {\r\n            axios.get(`/api/search/get-brands-by-text-search?term=${searchTerm}`)\r\n            .then(res => {\r\n                setBrands(res.data.brands)\r\n            })\r\n            .catch(err => {\r\n                console.log(err)\r\n            })\r\n        } else {\r\n            axios.get(`/api/brand/get-all`)\r\n            .then(res => {\r\n                setBrands(res.data.brands)\r\n            })\r\n            .catch(err => {\r\n                console.log(err)\r\n            })\r\n        }\r\n    }, [reload, searchTerm])\r\n\r\n\r\n\r\n\r\n    return (\r\n        <div className=\"teachers\">\r\n            <Headline headline=\"All teachers\" title='All teachers'/>\r\n            <Card>\r\n                <div className=\"teachers__table\">\r\n                    {\r\n                        Brands === '' ?\r\n                        <div className=\"\">Loading</div>\r\n                        :\r\n                        // Brands.length === 0 ?\r\n                        // <div className=\"\">No category added</div>\r\n                        // :\r\n                        <MegaTable \r\n                            brands = { Brands } \r\n                            setPageNumberProps={setPageNumber} \r\n                            setSearchTerm={setSearchTerm}\r\n                            totalPage={totalPage}\r\n                            setReload={setReload}\r\n                        />\r\n                    }\r\n                </div>\r\n            </Card>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Teachers\r\n","import React, { useEffect, useState, useRef } from 'react'\r\nimport { Box, Button, Card, Chip, Grid, TextField } from '@material-ui/core'\r\n\r\n\r\nimport Axios from 'axios'\r\nimport Headline from '../../Headline'\r\nimport '../Course.css'\r\nimport { useSelector } from 'react-redux';\r\n\r\nfunction CourseAdd() {  \r\n    const { teacherInfo } = useSelector(state => state.teacher)\r\n    const[values, setValues] = useState({\r\n        code: '',\r\n        title: '',\r\n        semester: 'fall-21',\r\n        batch: [],\r\n        teacher: teacherInfo._id\r\n    })\r\n\r\n    console.log(values)\r\n\r\n    useEffect(() => {\r\n        // Axios.get('/api/category/get-all')\r\n        // .then(res => {\r\n        //     setCategories(res.data.categories)\r\n        // })\r\n        // .catch(err => {\r\n        //     console.log(err)\r\n        // })\r\n    }, [])\r\n\r\n    const changeValue = name => e => {\r\n        if(name == 'batch') {\r\n            if(e.target.value) {\r\n                const tags = [...values.batch, e.target.value]\r\n                setValues({ ...values, [name]: [...new Set(tags)] });\r\n            }\r\n        } else if(name == 'code') {\r\n            setValues({ ...values, [name]: e.target.value.toUpperCase()})\r\n        } else {\r\n            setValues({ ...values, [name]: e.target.value });\r\n        }\r\n        \r\n    };\r\n\r\n    const removeTag = (e, name) => {\r\n        e.preventDefault()\r\n        const tags = values.batch.filter(b => b !== name)\r\n        setValues({ ...values, 'batch': tags });\r\n    }\r\n\r\n    const submit = (e) => {\r\n        e.preventDefault()\r\n        Axios.post(`/api/course/add`, values)\r\n        .then(res => {\r\n            console.log(res.data)\r\n            alert(`Added successfully`)\r\n        })\r\n        .catch(err => {\r\n            console.log(err)\r\n        })\r\n    }\r\n    return (\r\n        <div className=\"courseAdd\">\r\n            <Headline headline=\"Course Add\" title='Course Add'/>\r\n            <Card>\r\n                <form onSubmit={submit}>\r\n                    <Grid container item xs={12}>\r\n                        <Grid item xs={12} className=\"course__inputGroup\">\r\n                            <TextField select\r\n                                required \r\n                                label=\"Semester\" \r\n                                SelectProps={{ native: true }}\r\n                                onChange={changeValue('semester')}\r\n                                variant=\"outlined\">\r\n                                    <option value='fall-21'>Fall-21</option>\r\n                                    <option value='spring-22'>Spring-22</option>\r\n                            </TextField>\r\n                            <TextField error={false} helperText={false ? \"Name required\" : null} required placeholder=\"CSE-330\" label=\"Course Code\" onChange={changeValue('code')} variant=\"outlined\" />\r\n                            <TextField required placeholder=\"Computer Networks\" label=\"Course Title\" onChange={changeValue('title')} variant=\"outlined\" />\r\n                            <TextField select \r\n                                SelectProps={{ native: true }}\r\n                                onChange={changeValue('batch')}\r\n                                variant=\"outlined\">\r\n                                    <option value=''>Select batch</option>\r\n                                    <option value='spring-19'>spring-19</option>\r\n                                    <option value='fall-19'>fall-19</option>\r\n                                    <option value='summer-21'>summer-19</option>\r\n                            </TextField>\r\n                            <Box sx={{ display: 'flex' }}>\r\n                                {  \r\n                                    values.batch.map((b, i) => (\r\n                                        <Chip key={i} label={b} variant=\"outlined\" onDelete={e => removeTag(e, b)} />\r\n                                    ))\r\n                                }\r\n                            </Box>\r\n                           \r\n                        </Grid>\r\n                        <Button style={{marginTop: 20}} type=\"submit\" variant=\"contained\" color=\"primary\"> Add Course </Button>\r\n                    </Grid>\r\n                </form>\r\n            </Card>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default CourseAdd\r\n","import React, { useEffect, useState } from 'react'\r\nimport '../Course.css'\r\nimport { Box, Button, Card, Grid, TextField, Chip } from '@material-ui/core'\r\nimport Axios from 'axios'\r\nimport Headline from '../../Headline'\r\nimport { useParams } from 'react-router';\r\nimport { useSelector } from 'react-redux';\r\n\r\n\r\nfunction CourseEdit() {  \r\n    const { teacherInfo } = useSelector(state => state.teacher)\r\n\r\n    const[values, setValues] = useState({\r\n        code: '',\r\n        title: '',\r\n        semester: '',\r\n        batch: [],\r\n        teacher: teacherInfo._id\r\n    })\r\n    const { id } = useParams()\r\n\r\n    useEffect(() => {\r\n        Axios.get(`/api/course/get-course/${id}`)\r\n        .then(res => {\r\n            setValues(prev => res.data.course)\r\n            console.log(res.data.course)\r\n        })\r\n        .catch(err => {\r\n            console.log(err)\r\n        })\r\n    }, [])\r\n    \r\n    \r\n    const changeValue = name => e => {\r\n        if(name == 'batch') {\r\n            if(e.target.value) {\r\n                const tags = [...values.batch, e.target.value]\r\n                setValues({ ...values, [name]: [...new Set(tags)] });\r\n            }\r\n        } else if(name == 'code') {\r\n            setValues({ ...values, [name]: e.target.value.toUpperCase()})\r\n        } else {\r\n            setValues({ ...values, [name]: e.target.value });\r\n        }\r\n    };\r\n\r\n    const removeTag = (e, name) => {\r\n        e.preventDefault()\r\n        const tags = values.batch.filter(b => b !== name)\r\n        setValues({ ...values, 'batch': tags });\r\n    }\r\n\r\n\r\n    const submit = (e) => {\r\n        e.preventDefault()\r\n        Axios.put(`/api/course/edit/${id}`, values)\r\n        .then(res => {\r\n            console.log(res.data.course)\r\n            alert(res.data.message)\r\n        })\r\n        .catch(err => {\r\n            console.log(err)\r\n        })\r\n    }\r\n    return (\r\n        <div className=\"courseEdit\">\r\n            <Headline headline=\"Course Edit\" title='Course Edit'/>\r\n            <Card>\r\n                <form onSubmit={submit}>\r\n                    <Grid container item xs={12}>\r\n                        <Grid item xs={12} className=\"course__inputGroup\">\r\n                            <TextField select \r\n                                SelectProps={{ native: true }}\r\n                                onChange={changeValue('semester')}\r\n                                variant=\"outlined\">\r\n                                    <option value={values.semester}>{values.semester}</option>\r\n                                    <option value='fall-21'>fall-21</option>\r\n                            </TextField>\r\n                            <TextField error={false} helperText={\"Name required\"} required value={values.code} label=\"Course Code\" onChange={changeValue('code')} variant=\"outlined\" />\r\n                            <TextField required value={values.title}  label=\"Course Title\" onChange={changeValue('title')} variant=\"outlined\" />\r\n                            <TextField select \r\n                                SelectProps={{ native: true }}\r\n                                onChange={changeValue('batch')}\r\n                                variant=\"outlined\">\r\n                                    <option value=''>Select batch</option>\r\n                                    <option value='spring-19'>spring-19</option>\r\n                                    <option value='fall-19'>fall-19</option>\r\n                                    <option value='summer-21'>summer-19</option>\r\n                            </TextField>\r\n                            <Box sx={{ display: 'flex' }}>\r\n                                {  \r\n                                    values.batch.map((b, i) => (\r\n                                        <Chip key={i} label={b} variant=\"outlined\" onDelete={e => removeTag(e, b)} />\r\n                                    ))\r\n                                }\r\n                            </Box>\r\n                        \r\n            \r\n                        </Grid>\r\n                        <Button style={{marginTop: 20}} type=\"submit\" variant=\"contained\" color=\"primary\"> Save changes </Button>\r\n                    </Grid>\r\n                </form>\r\n            </Card>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default CourseEdit\r\n","import React from 'react';\r\nimport {Table, TableBody, TableCell, TableContainer, TableRow, Checkbox, FormControlLabel, Switch, Box, Button, TextField, Tooltip, Typography, Chip} from '@material-ui/core';\r\nimport {Pagination, Alert} from '@material-ui/lab';\r\nimport {  DeleteOutlined, Edit } from '@material-ui/icons';\r\nimport { Link } from 'react-router-dom';\r\nimport Axios from 'axios'\r\n\r\n\r\n\r\n\r\nfunction MegaTable({courses, setSearchTerm, setPageNumberProps, totalPage, setReload}) {\r\n  const [selected, setSelected] = React.useState([]);\r\n  const [page, setPage] = React.useState(0);\r\n  const [pageNumber, setPageNumber] = React.useState(1);\r\n\r\n  const [dense, setDense] = React.useState(false);\r\n  const [rowsPerPage, setRowsPerPage] = React.useState(50);\r\n  const [alertShow, setAlertShow] = React.useState(false)\r\n  const rows = courses;\r\n\r\n\r\n  // const handleAlertShow = (e) => {\r\n  //   e.preventDefault()\r\n  //   setAlertShow(!alertShow)\r\n  // }\r\n\r\n  const handleClick = (event, name) => {\r\n    const selectedIndex = selected.indexOf(name)\r\n    let newSelected = [];\r\n    if (selectedIndex === -1) {\r\n      newSelected = newSelected.concat(selected, name)\r\n    } else if (selectedIndex === 0) {\r\n      newSelected = newSelected.concat(selected.slice(1))\r\n    } else if (selectedIndex === selected.length - 1) {\r\n      newSelected = newSelected.concat(selected.slice(0, -1))\r\n    } else if (selectedIndex > 0) {\r\n      newSelected = newSelected.concat(\r\n        selected.slice(0, selectedIndex),\r\n        selected.slice(selectedIndex + 1),\r\n      );\r\n    }\r\n    setSelected(newSelected)\r\n  }\r\n\r\n  const changePage = (e, v) => {\r\n    setPageNumber(v)\r\n    setPageNumberProps(v)\r\n  }\r\n\r\n  const handleChangeDense = (event) => {\r\n    setDense(event.target.checked);\r\n  }\r\n\r\n  const deleteProduct = subcategoryIds => e => {\r\n    e.preventDefault()\r\n    if(subcategoryIds.length === 0) {\r\n      setAlertShow(true)\r\n    } else {\r\n      window.confirm(\"Are you sure you wish to delete this item?\") &&\r\n      subcategoryIds.map(id => {\r\n        Axios.delete(`api/course/delete/${id}`)\r\n        .then(res => {\r\n          alert(res.data.message)\r\n          setReload(prev => !prev)\r\n        })\r\n      })\r\n    }\r\n  }\r\n\r\n\r\n  const isSelected = (name) => selected.indexOf(name) !== -1;\r\n\r\n  const emptyRows = rowsPerPage - Math.min(rowsPerPage, rows.length - page * rowsPerPage);\r\n\r\n  return (\r\n    <div >\r\n      <div >\r\n        <div style={{display: 'flex', justifyContent: 'space-between', margin: 15}}>\r\n            <TextField onChange={e => setSearchTerm(e.target.value)} style={{flex: 0.5}} label=\"Search Product\" size=\"small\" variant=\"outlined\" />\r\n            <div style={{flex: 0.5}}>\r\n              {alertShow ? <Alert onClose={() => {setAlertShow(!alertShow)}} severity=\"warning\">Not selected any item!</Alert> : null}\r\n            </div>\r\n        </div>\r\n        \r\n        <Tooltip title=\"Delete category permanently\"><Button onClick={deleteProduct(selected)} size='small' style={{float: 'right', margin: 20}} variant=\"outlined\" color=\"secondary\" startIcon={<DeleteOutlined />}>\r\n           Delete \r\n        </Button></Tooltip> \r\n      \r\n        <TableContainer className=\"megatable__body\">\r\n          <Table size={dense ? 'small' : 'medium'}>\r\n            <TableBody>\r\n              <TableRow>\r\n                  <TableCell style={{fontWeight: 700}}>Select</TableCell>\r\n                  <TableCell style={{fontWeight: 700}}>Id</TableCell>\r\n                  <TableCell style={{fontWeight: 700}}>Course Code</TableCell>\r\n                  <TableCell style={{fontWeight: 700}}>Course Title</TableCell>\r\n                  <TableCell style={{fontWeight: 700}}>Semester</TableCell>\r\n                  <TableCell style={{fontWeight: 700}}>Batch</TableCell>\r\n                  <TableCell style={{fontWeight: 700}}>Actions</TableCell>\r\n                </TableRow>\r\n                { rows.length === 0 ? <Typography variant=\"h6\" color=\"initial\">No courses found in the filter</Typography> \r\n                :\r\n                rows.slice(page * rowsPerPage, page * rowsPerPage + rowsPerPage).map((row, index) => {\r\n                    const isItemSelected = isSelected(row._id);\r\n                    const labelId = `enhanced-table-checkbox-${index}`;\r\n                    return (\r\n                      <TableRow hover onClick={(event) => handleClick(event, row._id)} role=\"checkbox\" aria-checked={isItemSelected} tabIndex={-1} key={row._id} selected={isItemSelected}>\r\n                        <TableCell padding=\"checkbox\"><Checkbox checked={isItemSelected} inputProps={{ 'aria-labelledby': labelId }}/></TableCell>\r\n                        <TableCell id={labelId} scope=\"row\" padding=\"none\">{row._id}</TableCell>\r\n                        <TableCell>{row.code}</TableCell>\r\n                        <TableCell>{row.title}</TableCell>\r\n                        <TableCell>{row.semester}</TableCell>\r\n                        <TableCell>{row.batch.map(b => (<Chip label={b} />))}</TableCell>\r\n\r\n                        <TableCell>\r\n                          <Link to={`/course/edit/${row._id}`}>\r\n                              <Button size='small' style={{marginLeft: 10}} variant=\"outlined\" color=\"primary\" startIcon={<Edit />}>\r\n                                Edit \r\n                              </Button>\r\n                          </Link>\r\n                        </TableCell>\r\n                      </TableRow>\r\n                    );\r\n                  })}\r\n                  {emptyRows > 0 && (\r\n                    <TableRow style={{ height: (dense ? 33 : 53) * emptyRows }}>\r\n                      <TableCell colSpan={6} />\r\n                    </TableRow>\r\n                  )}\r\n            </TableBody>\r\n          </Table>\r\n        </TableContainer>\r\n\r\n        <Box mt={3} display=\"flex\" justifyContent=\"flex-end\">\r\n          <Pagination \r\n            count={totalPage} color=\"primary\" \r\n            page={pageNumber} \r\n            onChange={changePage}\r\n          />\r\n        </Box>\r\n\r\n      </div>\r\n      <FormControlLabel control={<Switch checked={dense} onChange={handleChangeDense} />} label=\"Dense padding\" />\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default MegaTable","import { Card } from '@material-ui/core'\r\nimport React, { useEffect, useState } from 'react'\r\nimport axios from 'axios'\r\n\r\nimport Headline from '../../Headline'\r\nimport MegaTable from './MegaTable'\r\n\r\n\r\nimport '../Course.css'\r\nimport { useSelector } from 'react-redux'\r\n\r\nfunction Courses() {\r\n    const { teacherInfo } = useSelector(state => state.teacher)\r\n\r\n    const [courses, setCourses] = useState('')\r\n    const [totalPage, setTotalPage] = useState('')\r\n    const [pageNumber, setPageNumber] = useState(1)\r\n    const [itemPerPage, setItemPerPage] = useState(10)\r\n    const [searchTerm, setSearchTerm] = useState('')\r\n    const [reload, setReload] = useState(false)\r\n\r\n\r\n    useEffect(() => {\r\n        axios.get(`/api/course/get-courses-by-teacher-id/${teacherInfo._id}`)\r\n        .then(res => {\r\n            setCourses(res.data.courses)\r\n        })\r\n        .catch(err => {\r\n            console.log(err)\r\n        })\r\n    }, [reload])\r\n\r\n\r\n    return (\r\n        <div className=\"courses\">\r\n            <Headline headline=\"All Courses\" title='All Courses'/>\r\n            <Card>\r\n                <div className=\"course__table\">\r\n                    {\r\n                        courses === '' ?\r\n                        <div className=\"\">Loading</div>\r\n                        :\r\n                        // courses.length === 0 ?\r\n                        // <div className=\"\">No category added</div>\r\n                        // :\r\n                        <MegaTable \r\n                            courses = { courses } \r\n                            setPageNumberProps={setPageNumber} \r\n                            setSearchTerm={setSearchTerm}\r\n                            totalPage={totalPage}\r\n                            setReload={setReload}\r\n                        />\r\n                    }\r\n                </div>\r\n            </Card>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Courses\r\n","import React, { useEffect, useState, useRef } from 'react'\r\nimport '../Attendance.css'\r\nimport {Button, Card, Checkbox, FormControl, FormControlLabel, Grid, Radio, RadioGroup, Table, TableBody, TableCell, TableContainer, TableHead, TableRow, TextField } from '@material-ui/core'\r\nimport Axios from 'axios'\r\nimport Headline from '../../Headline'\r\nimport { useSelector } from 'react-redux'\r\n\r\n\r\nfunction AttendanceAdd() {  \r\n    const { teacherInfo } = useSelector(state => state.teacher)\r\n\r\n    const[values, setValues] = useState({\r\n        semester: 'fall-21',\r\n        course: '',\r\n        present: [],\r\n        absent: [],\r\n        late: [],\r\n        date: new Date().toJSON().slice(0,10),\r\n        teacher: teacherInfo._id\r\n    })\r\n    const[loading, setLoading] = useState(true)\r\n    const[courses, setCourses] = useState([])\r\n    const[students, setStudents] = useState([])\r\n\r\n    \r\n\r\n    useEffect(() => {\r\n        Axios.get(`/api/course/get-courses-by-teacher-id/${teacherInfo._id}`)\r\n        .then(res => {\r\n            // console.log(res.data.courses.map(c => c.batch))\r\n            setCourses(prev => res.data.courses)\r\n            setLoading(false)\r\n        })\r\n        .catch(err => {\r\n            console.log(err)\r\n        })\r\n    }, [])\r\n\r\n    useEffect(() => {\r\n        setLoading(true)\r\n        // setValues({\r\n        //     ...values,\r\n        //     present: [],\r\n        //     absent: [],\r\n        //     late: [],\r\n        // })\r\n        setStudents(prev => [])\r\n        const filterData = courses.filter(c => c._id == values.course)\r\n        if(filterData.length !== 0) {\r\n            filterData[0].batch.map(async(b) => {\r\n                const response = await Axios.get(`/api/student/get-students-by-batch/${b}`)\r\n                \r\n                setStudents(prev => prev.concat(response.data.students))\r\n                setLoading(false)\r\n            })\r\n        }\r\n    }, [values.course])\r\n\r\n    console.log(values)\r\n\r\n    const changeValue = (name) => e => {\r\n        if(e.target.value == 'present') {\r\n            const items = [...values.present, name]\r\n            setValues({ \r\n                ...values,\r\n                ['present']: [...new Set(items)],\r\n                ['absent']: values.absent.filter(a => a !== name),\r\n                ['late']: values.late.filter(l => l !== name) \r\n            });\r\n        } else if(e.target.value == 'absent') {\r\n            const items = [...values.absent, name]\r\n            setValues({ \r\n                ...values,\r\n                ['present']: values.present.filter(p => p !== name),\r\n                ['absent']: [...new Set(items)],\r\n                ['late']: values.late.filter(l => l !== name)  \r\n            })\r\n            \r\n        } else if(e.target.value == 'late') {\r\n            const items = [...values.late, name]\r\n            setValues({ \r\n                ...values,\r\n                ['present']: values.present.filter(p => p !== name),\r\n                ['late']: [...new Set(items)],\r\n                ['absent']: values.absent.filter(a => a !== name)\r\n            })\r\n        } else {\r\n            setValues({ ...values, [name]: e.target.value })\r\n        }\r\n    };\r\n\r\n    const submit = (e) => {\r\n        e.preventDefault()\r\n        Axios.post(`/api/attendance/add`, values)\r\n        .then(res => {\r\n            alert(` Added successfully`)\r\n            // setValues({\r\n            //     ...values,\r\n            //     present: [],\r\n            //     absent: [],\r\n            //     late: [],\r\n            // })\r\n        })\r\n        .catch(err => {\r\n            console.log(err)\r\n        })\r\n    }\r\n\r\n    return (\r\n        <div className=\"attendanceAdd\">\r\n            <Headline headline=\"Attendance Add\" title='Attendance Add'/>\r\n            <Card>\r\n                <form onSubmit={submit}>\r\n                    <Grid container item xs={12}>\r\n                        <Grid item xs={12} className=\"attendance__inputGroup\">\r\n                            <TextField select required\r\n                                SelectProps={{ native: true }}\r\n                                onChange={changeValue('semester')}\r\n                                variant=\"outlined\">\r\n                                    <option value={values.semester}>Fall-21</option>\r\n                            </TextField>\r\n                            <TextField select required\r\n                                SelectProps={{ native: true }}\r\n                                onChange={changeValue('course')}\r\n                                variant=\"outlined\">\r\n                                    <option value=''>Select course</option>\r\n                                    {\r\n                                        courses && courses.map((c, i) => (\r\n                                            <option key={i} value={c._id}>{c.code}, {c.title}</option>\r\n                                        ))\r\n                                    }\r\n                            </TextField>\r\n                            <TextField required value={values.date} type=\"date\" onChange={changeValue('date')} variant=\"outlined\" />\r\n                        </Grid>\r\n                        <TableContainer>\r\n                            <Table >\r\n                                <TableHead>\r\n                                    <TableRow>\r\n                                        <TableCell>Serial</TableCell>\r\n                                        <TableCell>Student Id</TableCell>\r\n                                        <TableCell>Student Name</TableCell>\r\n                                        <TableCell>Batch</TableCell>\r\n                                        <TableCell>Phone</TableCell>\r\n                                        <TableCell>Attendance</TableCell>\r\n                                    </TableRow>\r\n                                </TableHead>\r\n                                {\r\n                                    loading ?\r\n                                    <div className=\"\">Loading</div>\r\n                                    :\r\n                                    <TableBody>\r\n                                        {\r\n                                            students.length === 0 ?\r\n                                            <div> Please select course </div>\r\n                                            :\r\n                                            students.map((s, i) => (\r\n                                                <TableRow key={i}>\r\n                                                    <TableCell>{i+1}</TableCell>\r\n                                                    <TableCell>{s.student_id}</TableCell>\r\n                                                    <TableCell>{s.name}</TableCell>\r\n                                                    <TableCell>{s.batch}</TableCell>\r\n                                                    <TableCell>{s.phone}</TableCell>\r\n                                                    <TableCell>\r\n                                                        <FormControl required onChange={changeValue(s.student_id)} component=\"fieldset\">\r\n                                                            <RadioGroup row name=\"row-radio-buttons-group\">\r\n                                                                <FormControlLabel value=\"present\" control={<Radio />} label=\"Present\" />\r\n                                                                <FormControlLabel value=\"absent\" control={<Radio />} label=\"Absent\" />\r\n                                                                <FormControlLabel value=\"late\" control={<Radio />} label=\"Late\" />\r\n                                                            </RadioGroup>\r\n                                                        </FormControl>\r\n                                                    </TableCell>\r\n                                                </TableRow>\r\n                                            ))\r\n                                        }\r\n                                    </TableBody>\r\n                                }\r\n                            </Table>\r\n                        </TableContainer>\r\n\r\n\r\n                        <Button style={{marginTop: 20}} type=\"submit\" variant=\"contained\" color=\"primary\"> Save </Button>\r\n                    </Grid>\r\n                </form>\r\n            </Card>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default AttendanceAdd\r\n","import React, { useEffect, useState, useRef } from 'react'\r\nimport '../Attendance.css'\r\nimport {Button, Card, Checkbox, FormControl, FormControlLabel, Grid, Radio, RadioGroup, Table, TableBody, TableCell, TableContainer, TableHead, TableRow, TextField } from '@material-ui/core'\r\n\r\nimport Axios from 'axios'\r\nimport Headline from '../../Headline'\r\nimport { useSelector } from 'react-redux'\r\nimport { useHistory, useParams } from 'react-router'\r\nimport FullScreenLoader  from '../../loader/FullSreenLoader'\r\nimport { useToasts } from 'react-toast-notifications';\r\n\r\n\r\n\r\nfunction AttendanceEdit() {  \r\n    const { teacherInfo } = useSelector(state => state.teacher)\r\n\r\n    const[values, setValues] = useState({\r\n        semester: '',\r\n        course: '',\r\n        present: [],\r\n        absent: [],\r\n        late: [],\r\n        date: '',\r\n        teacher: teacherInfo._id\r\n    })\r\n    const[loading, setLoading] = useState(true)\r\n    const[students, setStudents] = useState([])\r\n    const { addToast } = useToasts();\r\n    const history = useHistory()\r\n    const { id } = useParams()\r\n\r\n    useEffect(() => {\r\n        Axios.get(`/api/attendance/get-attendance/${id}`)\r\n        .then(res => {\r\n            setValues(prev => res.data.attendance)\r\n            res.data.attendance.course.batch.map(async(b) => {\r\n                const response = await Axios.get(`/api/student/get-students-by-batch/${b}`)\r\n                setStudents(prev => prev.concat(response.data.students))\r\n                setLoading(false)\r\n            })\r\n            \r\n        })\r\n        .catch(err => {\r\n            console.log(err)\r\n        })\r\n    }, [])\r\n\r\n\r\n    const getFilteredData = (date) => {\r\n        setLoading(true)\r\n        Axios.get(`/api/attendance/get-filter-attendances/${teacherInfo._id}?date=${date}&courseId=${values.course._id}`)\r\n        .then(res => {\r\n            if(res.data.attendances.length === 0) {\r\n                addToast('Please choose correct date. No data found!', { appearance: 'error' });\r\n            } else {\r\n                setValues(res.data.attendances[0])\r\n                history.push(`/attendance/edit/${res.data.attendances[0]._id}`)\r\n            }\r\n            setLoading(false)\r\n        })\r\n        .catch(err => {\r\n            console.log(err)\r\n        })\r\n    }\r\n\r\n    console.log(values)\r\n\r\n\r\n    const changeValue = (name) => e => {\r\n        if(e.target.value == 'present') {\r\n            const items = [...values.present, name]\r\n            setValues({ \r\n                ...values,\r\n                ['present']: [...new Set(items)],\r\n                ['absent']: values.absent.filter(a => a !== name),\r\n                ['late']: values.late.filter(l => l !== name) \r\n            });\r\n        } else if(e.target.value == 'absent') {\r\n            const items = [...values.absent, name]\r\n            setValues({ \r\n                ...values,\r\n                ['present']: values.present.filter(p => p !== name),\r\n                ['absent']: [...new Set(items)],\r\n                ['late']: values.late.filter(l => l !== name)  \r\n            })\r\n            \r\n        } else if(e.target.value == 'late') {\r\n            const items = [...values.late, name]\r\n            setValues({ \r\n                ...values,\r\n                ['present']: values.present.filter(p => p !== name),\r\n                ['late']: [...new Set(items)],\r\n                ['absent']: values.absent.filter(a => a !== name)\r\n            })\r\n        } else {\r\n            setValues({ ...values, [name]: e.target.value })\r\n        }\r\n    };\r\n\r\n    const submit = (e) => {\r\n        e.preventDefault()\r\n        setLoading(true)\r\n        Axios.put(`/api/attendance/edit/${values._id}`, values)\r\n        .then(res => {\r\n            console.log(res.data.attendance)\r\n            alert(res.data.message)\r\n            setLoading(false)\r\n        })\r\n        .catch(err => {\r\n            console.log(err)\r\n        })\r\n    }\r\n\r\n    return (\r\n        <div className=\"attendanceEdit\">\r\n            <Headline headline=\"Attendance Edit\" title='Attendance Edit'/>\r\n            <Card>\r\n                <form onSubmit={submit}>\r\n                    <Grid container item xs={12}>\r\n                        <Grid item xs={12} className=\"attendance__inputGroup\">\r\n                            <TextField select \r\n                                SelectProps={{ native: true }}\r\n                                onChange={changeValue('semester')}\r\n                                variant=\"outlined\">\r\n                                    <option value={values.semester}>{values.semester}</option>\r\n                            </TextField>\r\n                            <TextField select \r\n                                SelectProps={{ native: true }}\r\n                                variant=\"outlined\">\r\n                                    <option value={values.course._id}>{values.course.code}, {values.course.title}</option>\r\n                            </TextField>\r\n                            <TextField required onChange={e => getFilteredData(e.target.value)} value={values.date} type=\"date\" variant=\"outlined\" />\r\n                        </Grid>\r\n                        <TableContainer>\r\n                            <Table className=\"attendances__table\">\r\n                                <TableHead>\r\n                                    <TableRow>\r\n                                        <TableCell>Serial</TableCell>\r\n                                        <TableCell>Student Id</TableCell>\r\n                                        <TableCell>Student Name</TableCell>\r\n                                        <TableCell>Batch</TableCell>\r\n                                        <TableCell>Phone</TableCell>\r\n                                        <TableCell>Attendance</TableCell>\r\n                                    </TableRow>\r\n                                </TableHead>\r\n                                {\r\n                                    loading ?\r\n                                    <FullScreenLoader />\r\n                                    :\r\n                                    <TableBody>\r\n                                        {\r\n                                           students && students.map((s, i) => (\r\n                                                <TableRow key={i}>\r\n                                                    <TableCell>{i+1}</TableCell>\r\n                                                    <TableCell>{s.student_id}</TableCell>\r\n                                                    <TableCell>{s.name}</TableCell>\r\n                                                    <TableCell>{s.batch}</TableCell>\r\n                                                    <TableCell>{s.phone}</TableCell>\r\n                                                    <TableCell>\r\n                                                        <FormControl onChange={changeValue(s.student_id)} component=\"fieldset\">\r\n                                                            <RadioGroup row name=\"row-radio-buttons-group\">\r\n                                                                <FormControlLabel checked={values.present.includes(s.student_id) && true} value=\"present\" control={<Radio />} label=\"Present\" />\r\n                                                                <FormControlLabel checked={values.absent.includes(s.student_id) && true} value=\"absent\" control={<Radio />} label=\"Absent\" />\r\n                                                                <FormControlLabel checked={values.late.includes(s.student_id) && true} value=\"late\" control={<Radio />} label=\"Late\" />\r\n                                                            </RadioGroup>\r\n                                                        </FormControl>\r\n                                                    </TableCell>\r\n                                                </TableRow>\r\n                                            ))\r\n                                        }\r\n                                    </TableBody>\r\n                                }\r\n                            </Table>\r\n                        </TableContainer>\r\n\r\n\r\n                        <Button style={{marginTop: 20}} type=\"submit\" variant=\"contained\" color=\"primary\"> Save </Button>\r\n                    </Grid>\r\n                </form>\r\n            </Card>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default AttendanceEdit\r\n","import React from 'react';\r\nimport {Table, TableBody, TableCell, TableContainer, TableRow, Checkbox, FormControlLabel, Switch, Box, Button, TextField, Tooltip, Typography} from '@material-ui/core';\r\nimport {Pagination, Alert} from '@material-ui/lab';\r\nimport {  DeleteOutlined, Edit } from '@material-ui/icons';\r\nimport { Link } from 'react-router-dom';\r\nimport Axios from 'axios'\r\nimport FullScreenLoader  from '../../loader/FullSreenLoader'\r\n\r\n\r\n\r\n\r\nfunction MegaTable({attendances, courses, setCourseId, setDate, setPageNumberProps, totalPage, setReload}) {\r\n  const [selected, setSelected] = React.useState([]);\r\n  const [page, setPage] = React.useState(0);\r\n  const [pageNumber, setPageNumber] = React.useState(1);\r\n\r\n  const [dense, setDense] = React.useState(false);\r\n  const [rowsPerPage, setRowsPerPage] = React.useState(50);\r\n  const [alertShow, setAlertShow] = React.useState(false)\r\n  const rows = attendances;\r\n\r\n\r\n  // const handleAlertShow = (e) => {\r\n  //   e.preventDefault()\r\n  //   setAlertShow(!alertShow)\r\n  // }\r\n\r\n  const handleClick = (event, name) => {\r\n    const selectedIndex = selected.indexOf(name)\r\n    let newSelected = [];\r\n    if (selectedIndex === -1) {\r\n      newSelected = newSelected.concat(selected, name)\r\n    } else if (selectedIndex === 0) {\r\n      newSelected = newSelected.concat(selected.slice(1))\r\n    } else if (selectedIndex === selected.length - 1) {\r\n      newSelected = newSelected.concat(selected.slice(0, -1))\r\n    } else if (selectedIndex > 0) {\r\n      newSelected = newSelected.concat(\r\n        selected.slice(0, selectedIndex),\r\n        selected.slice(selectedIndex + 1),\r\n      );\r\n    }\r\n    setSelected(newSelected)\r\n  }\r\n\r\n  const changePage = (e, v) => {\r\n    setPageNumber(v)\r\n    setPageNumberProps(v)\r\n  }\r\n\r\n  const handleChangeDense = (event) => {\r\n    setDense(event.target.checked);\r\n  }\r\n\r\n  const deleteProduct = categoryIds => e => {\r\n    e.preventDefault()\r\n    if(categoryIds.length === 0) {\r\n      setAlertShow(true)\r\n    } else {\r\n      window.confirm(\"Are you sure you wish to delete this item?\") &&\r\n      categoryIds.map(id => {\r\n        Axios.delete(`/api/attendance/delete/${id}`)\r\n        .then(res => {\r\n          console.log(res.data.message)\r\n          alert(res.data.message)\r\n          setReload(prev => !prev)\r\n        })\r\n      })\r\n    }\r\n  }\r\n\r\n\r\n  const isSelected = (name) => selected.indexOf(name) !== -1;\r\n\r\n  const emptyRows = rowsPerPage - Math.min(rowsPerPage, rows.length - page * rowsPerPage);\r\n\r\n  return (\r\n    <div >\r\n      <div >\r\n        <div style={{display: 'flex', justifyContent: 'space-between', margin: 15}}>\r\n            <TextField onChange={e => setDate(e.target.value)} type=\"date\" size=\"small\" variant=\"outlined\" />\r\n            <TextField select\r\n                SelectProps={{ native: true }} \r\n                onChange={e => setCourseId(e.target.value)}\r\n                variant=\"outlined\">\r\n                    <option value=''>Select Course</option>\r\n                    {\r\n                      courses ?\r\n                      courses.map((course, index) => (\r\n                        <option key={index} value={course._id}>{course.code}, {course.title}</option>\r\n                      ))\r\n                      :\r\n                      <option value=''>Loading</option>\r\n                    }\r\n            </TextField>\r\n            <div style={{flex: 0.5}}>\r\n              {alertShow ? <Alert onClose={() => {setAlertShow(!alertShow)}} severity=\"warning\">Not selected any item!</Alert> : null}\r\n            </div>\r\n        </div>\r\n        \r\n        <Tooltip title=\"Delete category permanently\"><Button onClick={deleteProduct(selected)} size='small' style={{float: 'right', margin: 20}} variant=\"outlined\" color=\"secondary\" startIcon={<DeleteOutlined />}>\r\n           Delete \r\n        </Button></Tooltip> \r\n\r\n\r\n      \r\n        <TableContainer className=\"megatable__body\">\r\n          <Table size={dense ? 'small' : 'medium'}>\r\n            <TableBody>\r\n              <TableRow>\r\n                  <TableCell style={{fontWeight: 700}}>Select</TableCell>\r\n                  <TableCell style={{fontWeight: 700}}>Semester</TableCell>\r\n                  <TableCell style={{fontWeight: 700}}>Course</TableCell>\r\n                  <TableCell style={{fontWeight: 700}}>Batch</TableCell>\r\n                  <TableCell style={{fontWeight: 700}}>Date</TableCell>\r\n                  <TableCell style={{fontWeight: 700}}>Present</TableCell>\r\n                  <TableCell style={{fontWeight: 700}}>Absent</TableCell>\r\n                  <TableCell style={{fontWeight: 700}}>Late</TableCell>\r\n                  <TableCell style={{fontWeight: 700}}>Actions</TableCell>\r\n                </TableRow>\r\n                { \r\n                \r\n                rows ?\r\n                 rows.length === 0 \r\n                 ?\r\n                 <Typography variant=\"h6\" color=\"initial\">No items found in the filter</Typography>\r\n                 :\r\n                  rows.slice(page * rowsPerPage, page * rowsPerPage + rowsPerPage).map((row, index) => {\r\n                    const isItemSelected = isSelected(row._id);\r\n                    const labelId = `enhanced-table-checkbox-${index}`;\r\n                    return (\r\n                      <TableRow hover onClick={(event) => handleClick(event, row._id)} role=\"checkbox\" aria-checked={isItemSelected} tabIndex={-1} key={row._id} selected={isItemSelected}>\r\n                        <TableCell padding=\"checkbox\"><Checkbox checked={isItemSelected} inputProps={{ 'aria-labelledby': labelId }}/></TableCell>\r\n                        <TableCell id={labelId} scope=\"row\" padding=\"none\">{row.semester}</TableCell>\r\n                        <TableCell>{row.course.code}, {row.course.title}</TableCell>\r\n                        <TableCell>{row.course.batch.map((b, i) => ((i ? ', ': '') + b))}</TableCell>\r\n                        <TableCell>{row.date}</TableCell>\r\n                        <TableCell>{row.present.length}</TableCell>\r\n                        <TableCell>{row.absent.length}</TableCell>\r\n                        <TableCell>{row.late.length}</TableCell>\r\n\r\n                        <TableCell>\r\n                          <Link to={`/attendance/edit/${row._id}`}>\r\n                              <Button size='small' style={{marginLeft: 10}} variant=\"outlined\" color=\"primary\" startIcon={<Edit />}>\r\n                                Edit \r\n                              </Button>\r\n                          </Link>\r\n                        </TableCell>\r\n                      </TableRow>\r\n                    );\r\n                  })\r\n                :\r\n                <FullScreenLoader />\r\n                }\r\n\r\n           \r\n                  {emptyRows > 0 && (\r\n                    <TableRow style={{ height: (dense ? 33 : 53) * emptyRows }}>\r\n                      <TableCell colSpan={6} />\r\n                    </TableRow>\r\n                  )}\r\n            </TableBody>\r\n          </Table>\r\n        </TableContainer>\r\n\r\n        <Box mt={3} display=\"flex\" justifyContent=\"flex-end\">\r\n          <Pagination \r\n            count={totalPage} color=\"primary\" \r\n            page={pageNumber} \r\n            onChange={changePage}\r\n          />\r\n        </Box>\r\n\r\n      </div>\r\n      <FormControlLabel control={<Switch checked={dense} onChange={handleChangeDense} />} label=\"Dense padding\" />\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default MegaTable","import { Card } from '@material-ui/core'\r\nimport React, { useEffect, useState } from 'react'\r\nimport axios from 'axios'\r\n\r\nimport Headline from '../../Headline'\r\nimport MegaTable from './MegaTable'\r\n\r\n\r\nimport '../Attendance.css'\r\nimport { useSelector } from 'react-redux'\r\n\r\nfunction Attendances() {\r\n    const { teacherInfo } = useSelector(state => state.teacher)\r\n\r\n    const [attendances, setAttendances] = useState('')\r\n    const [courses, setCourses] = useState('')\r\n\r\n    const [totalPage, setTotalPage] = useState('')\r\n    const [pageNumber, setPageNumber] = useState(1)\r\n    const [itemPerPage, setItemPerPage] = useState(50)\r\n    const [date, setDate] = useState('')\r\n    const [courseId, setCourseId] = useState('')\r\n\r\n    const [reload, setReload] = useState(false)\r\n\r\n    console.log(courseId)\r\n\r\n    useEffect(() => {\r\n        setAttendances('')\r\n        axios.get(`/api/attendance/get-filter-attendances/${teacherInfo._id}?date=${date}&courseId=${courseId}`)\r\n        .then(res => {\r\n            console.log(res.data.attendances)\r\n            setAttendances(res.data.attendances)\r\n        })\r\n        .catch(err => {\r\n            console.log(err.statusCode)\r\n        })\r\n    }, [reload, date, courseId])\r\n\r\n    useEffect(() => {\r\n        axios.get(`/api/course/get-courses-by-teacher-id/${teacherInfo._id}`)\r\n        .then(res => {\r\n            setCourses(res.data.courses)\r\n        })\r\n        .catch(err => {\r\n            // alert(err.message)\r\n            // console.log(err.message)\r\n        })\r\n    }, [reload])\r\n\r\n \r\n    return (\r\n        <div className=\"attendances\">\r\n            <Headline headline=\"All attendances\" title='All attendances'/>\r\n            <Card>\r\n                <div className=\"attendances__table\">\r\n                    <MegaTable \r\n                        attendances = { attendances } \r\n                        setCourseId = { setCourseId }\r\n                        courses = { courses }\r\n                        setPageNumberProps={setPageNumber} \r\n                        setDate={setDate}\r\n                        totalPage={totalPage}\r\n                        setReload={setReload}\r\n                    />\r\n                </div>\r\n            </Card>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Attendances\r\n","import React from 'react';\nimport \"./App.css\";\nimport {BrowserRouter, Route, Switch} from 'react-router-dom'\n\n\nimport MenuSidebar from './components/sidebar/MenuSidebar'\nimport TopBar from './components/TopBar'\n\nimport Dashboard from './components/Dashboard'\n\nimport Login from './components/login/Login'\n\nimport StudentAdd from './components/student/StudentAdd/StudentAdd'\nimport StudentEdit from './components/student/StudentEdit/StudentEdit'\nimport Students from './components/student/Students/Students'\n\nimport TeacherAdd from './components/teacher/TeacherAdd/TeacherAdd'\nimport TeacherDetails from './components/teacher/TeacherDetails/TeacherDetails'\nimport TeacherEdit from './components/teacher/TeacherEdit/TeacherEdit'\nimport Teachers from './components/teacher/Teachers/Teachers'\n\nimport CourseAdd from './components/course/CourseAdd/CourseAdd'\nimport CourseEdit from './components/course/CourseEdit/CourseEdit'\nimport Courses from './components/course/Courses/Courses'\n\nimport AttendanceAdd from './components/attendance/AttendanceAdd/AttendanceAdd'\nimport AttendanceEdit from './components/attendance/AttendanceEdit/AttendanceEdit'\nimport Attendances from './components/attendance/Attendances/Attendances'\nimport { useSelector } from 'react-redux';\n\n\n\nfunction App() {\n  const { teacherLoggedIn } = useSelector(state => state.teacher)\n  \n  return (\n    <div className=\"app\">\n      {\n        !teacherLoggedIn ?\n        <BrowserRouter>\n          <Switch>\n            <Route exact path=\"/\" component={Login}/>\n            <Route exact path=\"/teacher/add\" component={TeacherAdd}/>\n          </Switch>\n        </BrowserRouter>\n        :\n        <div className=\"app__body\">\n          <BrowserRouter>\n              <MenuSidebar/>\n              <div className=\"app__bodyRight\">\n                <TopBar/>\n                <Switch>\n                    <Route exact path=\"/\" component={Dashboard}/>\n\n                    <Route exact path=\"/students\" component={Students}/>\n                    <Route exact path=\"/student/add\" component={StudentAdd}/>\n                    <Route exact path=\"/student/edit/:id\" component={StudentEdit}/>\n\n                    <Route exact path=\"/teachers\" component={Teachers}/>\n                    <Route exact path=\"/teacher/:id\" component={TeacherDetails}/>\n                    <Route exact path=\"/teacher/edit/:id\" component={TeacherEdit}/>\n\n                    <Route exact path=\"/courses\" component={Courses}/>\n                    <Route exact path=\"/course/add\" component={CourseAdd}/>\n                    <Route exact path=\"/course/edit/:id\" component={CourseEdit}/>\n\n                    <Route exact path=\"/attendances\" component={Attendances}/>\n                    <Route exact path=\"/attendance/add\" component={AttendanceAdd}/>\n                    <Route exact path=\"/attendance/edit/:id\" component={AttendanceEdit}/>\n\n                </Switch>\n              </div>\n          </BrowserRouter>\n      </div> \n      }\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import * as Types from '../actions/types'\r\n\r\nconst init = {\r\n    teacherLoggedIn: false,\r\n    sessionExpiresIn: '',\r\n    teacherInfo: {},\r\n}\r\n\r\nconst teacherReducer = (state=init, action) => {\r\n    switch(action.type) {\r\n        case Types.SET_TEACHER: {\r\n            return {\r\n                ...state,\r\n                teacherInfo: action.payload.teacherInfo,\r\n                teacherLoggedIn: Object.keys(action.payload.teacherInfo).length !== 0\r\n            }\r\n        }\r\n     \r\n        default: return state\r\n    }\r\n} \r\n\r\nexport default teacherReducer","import { combineReducers } from 'redux';\r\nimport teacherReducer from './teacher';\r\n\r\n\r\nconst rootReducer = combineReducers({\r\n    teacher: teacherReducer,\r\n})\r\n\r\nexport default rootReducer","import { createStore, applyMiddleware, compose } from 'redux';\r\nimport thunk from 'redux-thunk';\r\nimport rootReducer from './reducers/rootReducer';\r\nimport { loadState, saveState } from './localStorage'\r\n\r\n\r\nconst middleware = [thunk]\r\nconst persistedState = loadState();\r\n\r\n\r\nconst store = createStore(rootReducer, persistedState, compose(\r\n  applyMiddleware(...middleware),\r\n  // window.__REDUX_DEVTOOLS_EXTENSION__ && window.__REDUX_DEVTOOLS_EXTENSION__()\r\n))\r\n\r\nstore.subscribe(() => {\r\n  saveState({\r\n    teacher: store.getState().teacher,\r\n  });\r\n});\r\n\r\nexport default store;","\r\nexport const loadState = () => {\r\n  try {\r\n    const serializedState = localStorage.getItem('state')\r\n    if (serializedState === null) {\r\n      return undefined\r\n    }\r\n    return JSON.parse(serializedState)\r\n  } catch (err) {\r\n    return undefined\r\n  }\r\n}\r\n\r\nexport const saveState = (state) => {\r\n  try {\r\n    const serializedState = JSON.stringify(state);\r\n    localStorage.setItem('state', serializedState);\r\n  } catch {\r\n    // ignore write errors\r\n  }\r\n}\r\n\r\n\r\n\r\n\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport { Provider } from \"react-redux\";\nimport store from \"./store/store\";\nimport { ToastProvider } from 'react-toast-notifications'\n\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store}>\n      <ToastProvider autoDismiss autoDismissTimeout={4000}>\n          <App />\n      </ToastProvider>\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\n// serviceWorker.unregister();\n"],"sourceRoot":""}